import{_ as i,c as a,R as n,o as t}from"./chunks/framework.CdQpDa_J.js";const r=JSON.parse('{"title":"vim配置和插件使用","description":"","frontmatter":{"Author":"徐小东"},"headers":[],"relativePath":"编程基础/Linux/工具使用/vim配置和插件选择.md","filePath":"编程基础/Linux/工具使用/vim配置和插件选择.md","lastUpdated":1737308350000}'),l={name:"编程基础/Linux/工具使用/vim配置和插件选择.md"};function p(e,s,h,o,k,d){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="vim配置和插件使用" tabindex="-1">vim配置和插件使用 <a class="header-anchor" href="#vim配置和插件使用" aria-label="Permalink to &quot;vim配置和插件使用&quot;">​</a></h1><p>类 Unix 系统中有两大编辑器，Emacs 是神的编辑器，而 Vim 是编辑器之神， 而 Vim 是从 vi 发展出来的一个文本编辑器。有代码补完、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。</p><p>vim键盘图：</p><p><img src="https://www.runoob.com/wp-content/uploads/2015/10/vi-vim-cheat-sheet-sch.gif" alt="img"></p><p><code>Vim</code> 之所以被称为编辑器之神，就是因为系统资源占用小, 打开大文件毫无压力,可配置性强，自定义性高，可根据编码语言和个人喜好进行配置和选择。</p><h2 id="_1-vim使用" tabindex="-1">1. VIM使用 <a class="header-anchor" href="#_1-vim使用" aria-label="Permalink to &quot;1. VIM使用&quot;">​</a></h2><p><code>vim</code>有三种模式，命令模式，可视模式，输入模式</p><h4 id="_1-1-搜索和替换" tabindex="-1">1.1 搜索和替换 <a class="header-anchor" href="#_1-1-搜索和替换" aria-label="Permalink to &quot;1.1 搜索和替换&quot;">​</a></h4><p><code>?word</code>：反向搜索，效果上跟<code>/word</code>, 按 <code>N</code> 一样</p><p><code>:n1,n2s/word1/word2/g</code>： n1 与 n2 为数字。在第 n1 与 n2 行之间寻找 word1 这个字符串，并将该字符串取代为 word2</p><p><code>:1,$s/word1/word2/g</code>或者<code>:%s/word1/word2/g</code>：从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2</p><h4 id="_1-2-删除与复制" tabindex="-1">1.2 删除与复制 <a class="header-anchor" href="#_1-2-删除与复制" aria-label="Permalink to &quot;1.2 删除与复制&quot;">​</a></h4><p><code>x,X</code>：在一行字当中，x 为向后删除一个字符 (相当于 [del] 按键)， X 为向前删除一个字符(相当于 [backspace] 亦即是退格键) (常用)</p><p><code>nx</code>：n 为数字，连续向后删除 n 个字符。举例来说，我要连续删除 10 个字符</p><p><code>dd</code>： 删除游标所在的那一整行(常用)</p><p><code>ndd</code>：n 为数字。删除光标所在的向下 n 行，例如 20dd 则是删除 20 行</p><p><code>d1G</code>：删除光标所在到第一行的所有数据，相对dG就是删除光标所在行到最后一行的数据。</p><p><code>d$</code>：删除游标所在处，到该行的最后一个字符</p><p><code>d0</code>：是数字0不是o，删除行首到光标处的字符</p><p><code>tips</code>：把d换成y就是复制相关操作。</p><p><code>p,P</code>：p 为将已复制的数据在光标下一行贴上，P 则为贴在游标上一行</p><p><code>J</code>：合并光标所在行和下一行。</p><p><code>[Ctrl]+r</code>：重做上一个动作</p><p><code>. </code>：英文中的点号，就是重复上一个动作，比如先执行了dd命令，如果还想删除当前行，就按.就行了。</p><h4 id="_1-3-编辑模式" tabindex="-1">1.3 编辑模式 <a class="header-anchor" href="#_1-3-编辑模式" aria-label="Permalink to &quot;1.3 编辑模式&quot;">​</a></h4><p><code> I</code> ：大写的字符I，所在行的第一个非空格符处开始输入</p><p><code>a, A</code>：a 为从目前光标所在的下一个字符处开始输入 ，A 为从光标所在行的最后一个字符处开始输入</p><p><code>r, R</code>：r 只会取代光标所在的那一个字符一次；R会一直取代光标所在的文字</p><h4 id="_1-4-一般模式切换到指令行模式" tabindex="-1">1.4 一般模式切换到指令行模式 <a class="header-anchor" href="#_1-4-一般模式切换到指令行模式" aria-label="Permalink to &quot;1.4 一般模式切换到指令行模式&quot;">​</a></h4><p><code>ZZ</code>：大写的Z，相当于:wq</p><p><code>ZQ</code>：不保存强制退出</p><p><code>:w filename</code>：保存到另外一个新文件</p><p><code>:n1,n2 w filename</code>：将 n1 到 n2 的内容储存成 filename 这个档案</p><h4 id="_1-5-环境变量设置" tabindex="-1">1.5 环境变量设置 <a class="header-anchor" href="#_1-5-环境变量设置" aria-label="Permalink to &quot;1.5 环境变量设置&quot;">​</a></h4><p><code>:set number</code>：设置显示行号</p><p><code>:set nonumber</code>：设置隐藏行号</p><p><code>:set paste</code>：粘贴模式，从外部复制代码到vim编辑器中，直接粘贴原来的代码格式就不会保留，这么模式下会保留原来的格式</p><h4 id="_1-6-可视模式" tabindex="-1">1.6 可视模式 <a class="header-anchor" href="#_1-6-可视模式" aria-label="Permalink to &quot;1.6 可视模式&quot;">​</a></h4><p>批量添加注释：<code>ctrl+v</code>进入块选择模式，按下选中要添加注释的行，再按大写的字母<code>I</code>，输入注释，再按两次<code>ESC</code>保存</p><p>批量删除注释：<code>ctrl+v</code>进入块选择模式，如果注释为 <code>//</code>,那么就按右键，选中 <code>//</code>，再按下，选择要删除的行，再按小写字符<code>d</code>，再按<code>ESC</code>保存</p><h2 id="_2-配置说明" tabindex="-1">2. 配置说明 <a class="header-anchor" href="#_2-配置说明" aria-label="Permalink to &quot;2. 配置说明&quot;">​</a></h2><p>vim 样式配置</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot; 基础配置设置</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">filetype on                                                                             &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">检测文件类型</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">filetype indent on                                                                      </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;针对不同的文件类型采用不同的缩进格式</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">filetype plugin on                                                                      &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">允许插件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">filetype plugin indent on                                                               </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;启动自动补全</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">autocmd! bufwritepost _vimrc source %                                                  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vimrc文件修改之后自动加载。 windows。</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">autocmd! bufwritepost .vimrc source %                                                  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vimrc文件修改之后自动加载。 linux。</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">syntax enable                                                                           &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">开启代码高亮</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">syntax on                                                                               </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;打开高亮</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">set completeopt=longest,menu                                                            &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">自动补全配置,让Vim的补全菜单行为与一般IDE一致(参考VimTip1228)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;set relativenumber number                                                               &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">相对行号，可用Ctrl+n在相对/绝对行号间切换</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set cursorcolumn                                                                        </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;突出显示当前列，可用Ctrl+m切换是否显示</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set cursorline                                                                         </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;突出显示当前行，可用Ctrl+m切换是否显示</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">set history=3000                                                                        &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">history存储长度</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set nocompatible                                                                        </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;非兼容vi模式,避免以前版本的一些bug和局限</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">set nu                                                                                  &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">显示行数 </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">shiftwidth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=4                                                                        </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;换行时行间交错使用4空格</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">set cindent shiftwidth=4                                                                &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">自动缩进4空格</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">tabstop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=4                                                                           </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;让一个tab等于4个空格,Python必须设置.</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">set vb t_vb=</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">set showmatch                                                                           &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">显示括号配对情况</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set autoread                                                                            </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;当文件在外部被改变时，Vim自动更新载入</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">set nowrap                                                                              &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">设置不自动换行</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set writebackup                                                                         </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;设置无备份文件</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">set nobackup                                                                            &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">取消备份。 视情况自己改</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set noswapfile                                                                          </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;关闭交换文件</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">set showmode                                                                            &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">开启模式显示  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">cmdheight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=1                                                                         </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;命令部分高度为1 </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">set shortmess=atI                                                                       &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">启动的时候不显示那个援助索马里儿童的提示</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">t_ti</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">= </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">t_te</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=                                                                         </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;退出vim后，内容显示在终端屏幕 设置 退出vim后，内容显示在终端屏幕, 可以用于查看和复制好处：误删什么的，如果以前屏幕打开，可以找回</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 去掉输入错误的提示声音</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set title                                                                               </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;change the terminal&#39;s title</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">set novisualbell                                                                        &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">don</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;t beep</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">set noerrorbells                                                                        &quot;don&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t beep</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">t_vb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">tm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=500</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;set backup                                                                             &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">备份</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;set backupext=.bak</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">backupdir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=/tmp/vimbk/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">mat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=4                                                                               </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Blink times every second when matching brackets</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">set hidden                                                                              &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">A buffer becomes hidden when it is abandoned</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">wildmode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=list:longest																</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;:e 打开文件的时候,tab键显示的结果,显示不了则显																						&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">示--More--</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set ttyfast</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">wildignore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=*.swp,*.bak,*.pyc,*.class</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">scrolloff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=3                                                                         </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;至少有3行在光标所在行上下</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">set selection=old</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">set textwidth=80                                                                        &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">字符超过80自动换行</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">wrapmargin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=2																		</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;从窗口右侧向左数的列数来自动换行</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">set selectmode=mouse,key</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">set viminfo^=%                                                                          &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Remember info about open buffers on close</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set viminfo+=!                                                                          </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot; 保存全局变量</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">set magic                                                                               &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">正则表达式匹配形式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">backspace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=eol,start,indent                                                          </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Configure backspace so it acts as it should act</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">backspace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=indent,eol,start whichwrap+=&lt;,&gt;,[,]                                      </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;允许退格键的使用</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set iskeyword+=_,$,@,%,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#,-                                                             &quot;带有如下符号的单词不要被换行分割 </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set iskeyword+=_,$,@,%,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#                                                                &quot;带有如下符号的单词不要被换行分割 </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot; 字符间插入的像素行数目</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">au BufRead,BufNewFile *.{md,mdown,mkd,mkdn,markdown,mdwn}   set filetype=mkd   &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">markdown配置</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;set go=                                                                                        &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">不要图形按钮 set guioptions缩写 </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set cul                                                                                         </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;高亮光标所在行</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">autocmd InsertEnter * se cul                                                                    &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">用浅色高亮当前行  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set ruler                                                                                       </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;显示标尺  </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">set showcmd                                                                                     &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">输入的命令显示出来，看的清楚些  </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;设置标记一列的背景颜色和数字一行颜色一致</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">hi! link SignColumn   LineNr</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">hi! link ShowMarksHLl DiffAdd</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">hi! link ShowMarksHLu DiffChange</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">statusline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=%F%m%r%h%w\\ [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FORMAT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=%{&amp;ff}]\\ [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TYPE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=%Y]\\ [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">POS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=%l,%v][%p%%]\\ %{strftime(\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;%d/%m/%y\\ -\\ %H:%M\\&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)}  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;状态行显示的内容</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">set statusline+=%f                                                                              &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">不显示工具条</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">laststatus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=5                                                                                </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;启动显示状态行(1),总是显示状态行(2)  </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set ignorecase                                                                                  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;搜索时忽略大小写 </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">set hlsearch                                                                                     &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">高亮显示结果</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;set nohlsearch                                                                                  &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">关闭搜索高亮  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set incsearch                                                                                    </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;在输入要搜索的文字时，vim会实时匹配</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot; color&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">if &amp;bg == &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dark</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;                                                                                        &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 根据你的背景色风格来设置不同的书签颜色</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> highlight SignColor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ctermfg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=white </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ctermbg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=blue </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">guifg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=wheat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">guibg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=peru</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">else                                                                                                    </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot; 主要就是修改guibg的值来设置书签的颜色</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> highlight SignColor ctermbg=white ctermfg=blue guibg=grey guifg=RoyalBlue3</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">endif</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">if $TERM =~ &#39;^xterm&#39; || $TERM =~ &#39;^screen&#39; || $TERM=~ &#39;256color$&#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    set t_Co=256</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    set background=dark</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        colorscheme maroloccio</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">elseif has(&#39;gui_running&#39;)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    set background=light</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    colorscheme solarized</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">elseif $TERM =~ &#39;cons256&#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    colorscheme default</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">endif</span></span></code></pre></div><h4 id="_2-1-快捷键设置" tabindex="-1">2.1 快捷键设置 <a class="header-anchor" href="#_2-1-快捷键设置" aria-label="Permalink to &quot;2.1 快捷键设置&quot;">​</a></h4><p>vim设置快捷键共4中方法</p><ul><li>map系列命令</li></ul><p><code>map {lhs} {rhs}</code>。这个命令就是将<code>{lhs}</code>代表的按键映射成<code>{rhs}</code>所代表的按键。例如map L <code>$</code>就是将<code>$</code>键映射成L。此外需要注意的是map命令定义的快捷键是可以嵌套的</p><ul><li>noremap系列命令</li></ul><p><code>no[remap] {lhs} {rhs}</code>，顾名思义，就是不可以重新映射的命令。这个命令和 map 命令类似，不过它所定义的命令不可以被重新映射</p><ul><li>unmap系列命令</li></ul><p>就是用来取消所在模式下快捷键的定义</p><ul><li>mapclear系命令</li></ul><p>清除所在模式下定义的所有快捷键</p><h4 id="_2-2-自定义快捷键相关的六种模式" tabindex="-1">2.2 自定义快捷键相关的六种模式 <a class="header-anchor" href="#_2-2-自定义快捷键相关的六种模式" aria-label="Permalink to &quot;2.2 自定义快捷键相关的六种模式&quot;">​</a></h4><p>在Vim中，共有六种模式，不同的定义快捷键的命令生效的模式不同，这六种模式如下：</p><ul><li>N ormal Mode: 即Vim的普通模式，我们打开Vim后进入的第一个模式即此模式。</li><li>V isual Mode: 即Vim的Visual模式，我们在选中了一定的文本之后(通过v或者V命令)即进入此模式。</li><li>S elect Mode: 这种模式和Visual模式相似，不过输入的文本都会替换选中的文本。在普通模式下，通过鼠标选中或者使用gH命令都可以进入此模式。</li><li>O perator-pending Mode: 当我们输入一个操作符后(例如，d，y，c等等)，就会进入此模式。</li><li>I nsert Mode: 即Vim的插入模式，普通模式下我们输入i(或者s,a等等)就会进入此模式。</li><li>C ommand-line Mode: 命令行模式，我们在普通模式下输入:或者/等就会进入此模式</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>        noremap &lt;F1&gt; &lt;Esc&gt;&quot;</span></span>
<span class="line"><span>        nnoremap &lt;F2&gt; :set nonumber! number?&lt;CR&gt;</span></span>
<span class="line"><span>        nnoremap &lt;F3&gt; :set wrap! wrap?&lt;CR&gt;</span></span>
<span class="line"><span>        nmap &lt;silent&gt; &lt;F4&gt; :TagbarToggle&lt;CR&gt; &quot;按下F4就可以呼出文件的函数列表及变量</span></span>
<span class="line"><span>        map &lt;F12&gt; :call Do_CsTag()&lt;CR&gt;</span></span>
<span class="line"><span>        function Do_CsTag()</span></span>
<span class="line"><span>        endfunction</span></span></code></pre></div><p>插件寻找位置：<a href="https://vimawesome.com/" target="_blank" rel="noreferrer">https://vimawesome.com/</a></p><h2 id="_3-vim插件" tabindex="-1">3. vim插件 <a class="header-anchor" href="#_3-vim插件" aria-label="Permalink to &quot;3. vim插件&quot;">​</a></h2><p>插件管理器：顾名思义就是管理插件的工具，在 vim8 之前都是采用三方工具管理插件，vim8有了自己插件管理器package，</p><p>常见的第三方vim插件管理有Vundle， vim-plug， dein， pathogen，Volt</p><p>本文只介绍Vundle，最早的 vim 插件管理器，最新的 vim-plug 相比 Vundle 多了异步功能</p><p>项目地址：<a href="https://github.com/VundleVim/Vundle.vim" target="_blank" rel="noreferrer">https://github.com/VundleVim/Vundle.vim</a></p><p>安装 Vundle ：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.vim</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.vim/bundle</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.vim/bundle</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/VundleVim/Vundle.vim.git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.vim/bundle/Vundle.vim</span></span></code></pre></div><p>修改 .vimrc 配置文件，在 call vundle#begin() 和 call vundle#end() 之间添加指定的插件保存并执行PluginInstall命令进行安装</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>call vundle#begin()</span></span>
<span class="line"><span>&quot;call vundle#begin(&#39;~/some/path/here&#39;)</span></span>
<span class="line"><span>&quot; let Vundle manage Vundle, required</span></span>
<span class="line"><span>Plugin &#39;VundleVim/Vundle.vim&#39;</span></span>
<span class="line"><span>&quot; The following are examples of different formats supported.</span></span>
<span class="line"><span>&quot; Keep Plugin commands between vundle#begin/end.</span></span>
<span class="line"><span>&quot; plugin on GitHub repo</span></span>
<span class="line"><span>Plugin &#39;tpope/vim-fugitive&#39;</span></span>
<span class="line"><span>&quot; plugin from http://vim-scripts.org/vim/scripts.html</span></span>
<span class="line"><span>&quot; Plugin &#39;L9&#39;</span></span>
<span class="line"><span>&quot; Git plugin not hosted on GitHub</span></span>
<span class="line"><span>Plugin &#39;git://git.wincent.com/command-t.git&#39;</span></span>
<span class="line"><span>&quot; git repos on your local machine (i.e. when working on your own plugin)</span></span>
<span class="line"><span>Plugin &#39;file:///home/gmarik/path/to/plugin&#39;</span></span>
<span class="line"><span>&quot; The sparkup vim script is in a subdirectory of this repo called vim.</span></span>
<span class="line"><span>&quot; Pass the path to set the runtimepath properly.</span></span>
<span class="line"><span>Plugin &#39;rstacruz/sparkup&#39;, {&#39;rtp&#39;: &#39;vim/&#39;}</span></span>
<span class="line"><span>Plugin &#39;MarcWeber/vim-addon-mw-utils&#39;</span></span>
<span class="line"><span>Plugin &#39;tomtom/tlib_vim&#39;</span></span>
<span class="line"><span>Plugin &#39;garbas/vim-snipmate&#39;</span></span>
<span class="line"><span>Plugin &#39;davidhalter/jedi-vim&#39;</span></span>
<span class="line"><span>Plugin &#39;nvie/vim-flake8&#39;</span></span>
<span class="line"><span>Plugin &#39;klen/python-mode&#39;</span></span>
<span class="line"><span>Plugin &#39;google/vim-maktaba&#39;</span></span>
<span class="line"><span>Plugin &#39;google/vim-codefmt&#39;</span></span>
<span class="line"><span>Plugin &#39;google/vim-glaive&#39;</span></span>
<span class="line"><span>call vundle#end() &quot; requiredfiletype plugin indent on &quot; required</span></span></code></pre></div><p>执行安装命令后的效果，有些插件需要需要梯子才能正常安装</p><p>Vundle可以进行插件安装卸载，及列出插件列表，对应命令：PluginClean PluginDocs PluginInstall PluginList PluginSearch PluginUpdate</p><h3 id="_3-1-插件安装方式" tabindex="-1">3.1 插件安装方式 <a class="header-anchor" href="#_3-1-插件安装方式" aria-label="Permalink to &quot;3.1 插件安装方式&quot;">​</a></h3><ul><li>从github上安装：</li></ul><p><code>Plugin &#39;user/plugin&#39;</code></p><ul><li>从特定的网址安装</li></ul><p><code>Plugin &#39;plugin_name&#39;</code></p><ul><li>从一个git库里面安装</li></ul><p><code>Plugin &#39;git://url.git&#39;</code></p><ul><li>本地安装</li></ul><p><code>Plugin &#39;file:///path&#39;</code></p><p>从github安装，如果没有梯子，可能会安装失败，国内有个代码托管平台码云（gitee）可以直接同步到gitee中，然后再指定选择ssh的地址进行安装，再通过git仓库的方式进行安装。</p><p>还可以将插件克隆到 <code>.vim/bundle</code> 下，使用本地安装的方式进行安装</p><h3 id="_3-2-安装ack插件使用" tabindex="-1">3.2 安装ack插件使用 <a class="header-anchor" href="#_3-2-安装ack插件使用" aria-label="Permalink to &quot;3.2 安装ack插件使用&quot;">​</a></h3><ul><li>安装ack, <code>sudo apt install ack</code></li><li>clone 代码到.vim/bundle,</li><li>使用命令: <code>Ack word</code>搜索字符串</li><li>设置快捷键<code>nnoremap &lt;F8&gt; :Ack</code></li></ul><h3 id="_3-3-插件介绍" tabindex="-1">3.3 插件介绍 <a class="header-anchor" href="#_3-3-插件介绍" aria-label="Permalink to &quot;3.3 插件介绍&quot;">​</a></h3><h4 id="_3-3-1-nerdtree" tabindex="-1">3.3.1 NERDTree <a class="header-anchor" href="#_3-3-1-nerdtree" aria-label="Permalink to &quot;3.3.1 NERDTree&quot;">​</a></h4><p>该插件显示一个目录树，可以执行文件的操作命令。在大型项目中，你很难找到你要编辑的那一行的文件确切名称和位置。通过快捷键，一个资源管理器窗口就会以目录树的方式打开，你可以轻松找到你想要的文件并打开它，假如你有大量代码或者容易忘记文件名的人，NERDTree 是必须要有的</p><h4 id="_3-3-2-ack" tabindex="-1">3.3.2 ack <a class="header-anchor" href="#_3-3-2-ack" aria-label="Permalink to &quot;3.3.2 ack&quot;">​</a></h4><p>当我需要搜索包含某一行或者某个单词的文件时，我就很喜欢 ack 插件，你最好把它和 ag 结合使用，这是一个名为“The Silver Searcher”的全局搜索工具。这个组合非常快，涵盖了我可以使用 grep 或 vimgrep 做的绝大多数事情。缺点是你需要安装 ack 或 ag 才能正常运行，优点是 ag 和 ack 都可以用于 Fedora 和 EPEL7</p><h4 id="_3-3-3-youcompleteme" tabindex="-1">3.3.3 YouCompleteMe <a class="header-anchor" href="#_3-3-3-youcompleteme" aria-label="Permalink to &quot;3.3.3 YouCompleteMe&quot;">​</a></h4><p>自动补全插件,依赖环境变量</p>`,89)]))}const E=i(l,[["render",p]]);export{r as __pageData,E as default};
