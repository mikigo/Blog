import{_ as i,c as a,R as n,o as h}from"./chunks/framework.CdQpDa_J.js";const g=JSON.parse('{"title":"智能化功能测试","description":"","frontmatter":{},"headers":[],"relativePath":"编程基础/人工智能/智能化功能测试.md","filePath":"编程基础/人工智能/智能化功能测试.md","lastUpdated":1737308350000}'),t={name:"编程基础/人工智能/智能化功能测试.md"};function l(p,s,e,k,d,r){return h(),a("div",null,s[0]||(s[0]=[n(`<h1 id="智能化功能测试" tabindex="-1">智能化功能测试 <a class="header-anchor" href="#智能化功能测试" aria-label="Permalink to &quot;智能化功能测试&quot;">​</a></h1><p><img src="https://pic.imgdb.cn/item/64f054c2661c6c8e54ff477b.png" alt=""></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Attribution ：Chengdu Test Team</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Date        ：2021/08/20</span></span></code></pre></div><p>仓库地址：<a href="ttps://gitlabcd.uniontech.com/autotest/cd-desktop-aitest" target="_blank" rel="noreferrer">https://gitlabcd.uniontech.com/autotest/cd-desktop-aitest</a></p><h2 id="一、方案概述" tabindex="-1">一、方案概述 <a class="header-anchor" href="#一、方案概述" aria-label="Permalink to &quot;一、方案概述&quot;">​</a></h2><p>基于深度学习智能识别应用的元素控件，用于在自动化测试操作过程中的元素定位以及判断结果时的断言处理；自动化测试过程中，测试机上的画面通过采集盒传输到服务器上，服务器对视频画面进行智能识别后，服务器智能判断用例是否执行成功，然后对测试机下发下一步操作指令，测试机接受并执行下一步操作。</p><p>服务器与测试机之间的链接：</p><ul><li>服务器通过 USB 串口设备（USB-HID 协议）模拟鼠标键盘对测试机进行操作。</li><li>通过视频采集设备捕获测试机的实时画面传输给服务器。</li></ul><p>服务器对采集的画面进行智能识别，识别其中的元素控件，并返回元素控件在屏幕中的坐标，服务器通过智能化分析，如果测试结果与预期一致将下一步操作指令通过串口模拟键鼠信号发送给测试机；如果测试结果与预期不一致将会进入中断处理及异常结果输出，继续执行后续场景，直至所有用例测试完成。</p><h2 id="二、深度学习环境搭建" tabindex="-1">二、深度学习环境搭建 <a class="header-anchor" href="#二、深度学习环境搭建" aria-label="Permalink to &quot;二、深度学习环境搭建&quot;">​</a></h2><p>模型训练主要对 GPU 有要求，训练模型的机器显存不低于 6G，其他配置无特殊要求。</p><p><strong>推荐性价比较高配置</strong></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">操作系统:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> UnionTech</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> OS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Desktop</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Professional</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Linux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4.19</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.0-desktop-amd64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (deepin@deepin-PC) (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Uos</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8.3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.0.3-3+rebuild</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">处理器:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Intel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">R</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Core</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">i7-10700</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CPU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2.90</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">GHz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (八核 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 十六逻辑处理器</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">主板:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> B460M-HDV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">RD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">内存:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">GB</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TF32D4U2S1MEH-8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DDR4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2933</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">MHz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0.3ns))/8GB(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TF32D4U2S1MEH-8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DDR4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2933</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">MHz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0.3ns))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">显示适配器:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TU116</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [GeForce </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">GTX</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1660</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]</span></span></code></pre></div><h3 id="_1、虚拟环境安装" tabindex="-1">1、虚拟环境安装 <a class="header-anchor" href="#_1、虚拟环境安装" aria-label="Permalink to &quot;1、虚拟环境安装&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Miniconda3-latest-Linux-x86_64.sh</span></span></code></pre></div><p>一路回车</p><p>第一次提示输入 yes/no ：输入 <code>yes</code></p><p>继续一路回车</p><p>第二次提示：输入 <code>no</code></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/miniconda3/bin</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 777</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> activate</span></span></code></pre></div><p>激活conda环境</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./activate</span></span></code></pre></div><p>添加公司内网源</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> channels</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bioconda</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> channels</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> conda-forge</span></span></code></pre></div><p>如果是外网添加外网源</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> channels</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> channels</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> channels</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> channels</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/</span></span></code></pre></div><p>如果要删除源</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --remove-key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> channels</span></span></code></pre></div><h3 id="_2、安装依赖" tabindex="-1">2、安装依赖 <a class="header-anchor" href="#_2、安装依赖" aria-label="Permalink to &quot;2、安装依赖&quot;">​</a></h3><h4 id="_1-创建虚拟环境" tabindex="-1">（1）创建虚拟环境 <a class="header-anchor" href="#_1-创建虚拟环境" aria-label="Permalink to &quot;（1）创建虚拟环境&quot;">​</a></h4><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remove</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mmlab</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --all</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 移除所有虚拟环境</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mmlab</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.7</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> activate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mmlab</span></span></code></pre></div><h4 id="_2-安装-pytorch" tabindex="-1">（2）安装 Pytorch <a class="header-anchor" href="#_2-安装-pytorch" aria-label="Permalink to &quot;（2）安装 Pytorch&quot;">​</a></h4><p>在mmlab虚拟环境中执行</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> torch==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.7</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.0+cu101</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> torchvision==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.1+cu101</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> torchaudio==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.7</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://download.pytorch.org/whl/torch_stable.html</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://pypi.douban.com/simple</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --trusted-host</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pypi.douban.com</span></span></code></pre></div><h4 id="_3-安装-mmcv" tabindex="-1">（3）安装 MMCV <a class="header-anchor" href="#_3-安装-mmcv" aria-label="Permalink to &quot;（3）安装 MMCV&quot;">​</a></h4><p>在mmlab虚拟环境中执行</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mmcv-full==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://download.openmmlab.com/mmcv/dist/cu101/torch1.7.0/index.html</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://pypi.douban.com/simple</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --trusted-host</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pypi.douban.com</span></span></code></pre></div><h4 id="_4-安装显卡驱动" tabindex="-1">（4）安装显卡驱动 <a class="header-anchor" href="#_4-安装显卡驱动" aria-label="Permalink to &quot;（4）安装显卡驱动&quot;">​</a></h4><p>根据你的显卡下载对应驱动，比如我的显卡为 <code>GTX1660</code>，驱动版本为 430，驱动下载地址：<a href="https://www.nvidia.cn/Download/Find.aspx?lang=cn" target="_blank" rel="noreferrer">https://www.nvidia.cn/Download/Find.aspx?lang=cn</a></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CTRL+ALT+F2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 进入tty</span></span></code></pre></div><p>禁用 nouveau 驱动</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/modprobe.d/blacklist-nouveau.conf</span></span></code></pre></div><p>填入：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">blacklist</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nouveau</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">options</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nouveau</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> modeset=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span></code></pre></div><p>刷新配置文件</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update-initramfs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span></span></code></pre></div><p>reboot 重启后再进入 tty</p><p>关闭图像界面，输入命令关闭图像界面</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> service</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lightdm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span></span></code></pre></div><p>安装驱动</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a+x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> NVIDIA-Linux-x86_64-430.run</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./NVIDIA-Linux-x86_64-430.run</span></span></code></pre></div><p>reboot重启，nvidia-smi查看安装状态。注意看下cuda版本，10.1，driver版。</p><h2 id="三、数据标注" tabindex="-1">三、数据标注 <a class="header-anchor" href="#三、数据标注" aria-label="Permalink to &quot;三、数据标注&quot;">​</a></h2><h3 id="_1、数据标注" tabindex="-1">1、数据标注 <a class="header-anchor" href="#_1、数据标注" aria-label="Permalink to &quot;1、数据标注&quot;">​</a></h3><p>标注之前需要先转换图片大小，并且以数字命名，每组命名递增</p><h4 id="_1-转换大小并重命名" tabindex="-1">（1）转换大小并重命名 <a class="header-anchor" href="#_1-转换大小并重命名" aria-label="Permalink to &quot;（1）转换大小并重命名&quot;">​</a></h4><p>rename_pic.py</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sys</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cv2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> time</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> getpass</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">username </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> getpass.getuser()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">source_path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/home/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">username</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Desktop/right_menu&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 图片路径</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">source_dest </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.join(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.join(source_path.split(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)[:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;tmp&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> not</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.exists(source_dest):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    os.mkdir(source_dest)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">start_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sys.argv[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">file_name_list </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.listdir(source_path):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.endswith(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.png&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        file_name_list.append(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">start_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(start_name)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> file_name_list:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    os.rename(os.path.join(source_path,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), os.path.join(source_path, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(start_name)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    start_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time.sleep(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.listdir(source_path):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    image </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.join(source_path, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    src </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cv2.imread(image)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cv2.resize(src, (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">960</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">540</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    resizeImage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.join(source_dest, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(resizeImage)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    cv2.imwrite(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(resizeImage), result)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cv2.waitKey(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cv2.destroyAllWindows()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time.sleep(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">os.system(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;rm -rf </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">source_path</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/*&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">os.system(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;mv </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">source_dest</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/* </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">source_path</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">os.system(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;rm -rf </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">source_dest</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;下一个序号：&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, start_name)</span></span></code></pre></div><p>根据终端输出的下一个序号的提示，执行 Python 文件的时候传参。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rename_pic.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 249</span></span></code></pre></div><h4 id="_2-工具标注" tabindex="-1">（2）工具标注 <a class="header-anchor" href="#_2-工具标注" aria-label="Permalink to &quot;（2）工具标注&quot;">​</a></h4><p>使用工具 labelImg 标注</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pip3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PyQt5==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5.13</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pip3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> labelImg</span></span></code></pre></div><p>终端直接输入 labelImg，回车</p><p>标注模式选择：<code>PascalVOC</code></p><h3 id="_2、智能标注" tabindex="-1">2、智能标注 <a class="header-anchor" href="#_2、智能标注" aria-label="Permalink to &quot;2、智能标注&quot;">​</a></h3><p>打开屏幕录制软件，录制手动操作一次测试用例，然后将录制的视频进行分帧，然后对比前两帧图标相似度，剔除相似度过高的图片，在保证素材多样性的前提下，剔除重复多余的图片生成待标注的素材集，然后取出控件模板数据集，通过 OpenCV 模板匹配获取控件在待标注的素材图片中所在的左上、左下、右上、右下四处坐标，从而根据模板数据集生成标注数据。参考目录 AnnotationMaterial</p><h4 id="_1-模板数据集准备" tabindex="-1">（1）模板数据集准备 <a class="header-anchor" href="#_1-模板数据集准备" aria-label="Permalink to &quot;（1）模板数据集准备&quot;">​</a></h4><p>1、在界面截取需要标注的元素控件，放在目录下 AnnotationMaterial/template/img</p><p>2、维护控件名与元素控件的键对，一个控件名可对应多个元素控件</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">menu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">menu.jpg</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">menu1.jpg</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">menu2.jpg</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">menu3.jpg</span></span></code></pre></div><h4 id="_2-素材集准备" tabindex="-1">（2）素材集准备 <a class="header-anchor" href="#_2-素材集准备" aria-label="Permalink to &quot;（2）素材集准备&quot;">​</a></h4><p>录制视频或或屏幕截图放置目录 AnnotationMaterial/source</p><h4 id="_3-开始标注" tabindex="-1">（3）开始标注 <a class="header-anchor" href="#_3-开始标注" aria-label="Permalink to &quot;（3）开始标注&quot;">​</a></h4><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> AnnotationMaterial/main.py</span></span></code></pre></div><p>生成的标注数据存放在 AnnotationMaterial/result</p><h2 id="四、mmdetection" tabindex="-1">四、MMDetection <a class="header-anchor" href="#四、mmdetection" aria-label="Permalink to &quot;四、MMDetection&quot;">​</a></h2><h3 id="_1、-mmdetection-代码" tabindex="-1">1、 MMDetection 代码 <a class="header-anchor" href="#_1、-mmdetection-代码" aria-label="Permalink to &quot;1、 MMDetection 代码&quot;">​</a></h3><p>MMDetection 是一个有名的深度学习目标检测开源项目，也是 <code>openMMlab</code> 的招牌项目，为什么选择它，小孩儿没娘说来话长，感兴趣可以自行深入了解；</p><p>你可以直接在 GitHub 上克隆代码，也可以直接使用咱们仓库下 Train 目录中代码，Train 中的代码也是从 GitHub 上拉取的，不过我们根据项目需要做了一些二次开发，推荐直接使用它。</p><p>如果你想从 GitHub 上拉：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/open-mmlab/mmdetection.git</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 不能直接拉取主分支，建议使用2.12版本，不同的版本对应的mmcv版本是不同的</span></span></code></pre></div><h3 id="_2、拉取-voc2coco-代码" tabindex="-1">2、拉取 voc2coco 代码 <a class="header-anchor" href="#_2、拉取-voc2coco-代码" aria-label="Permalink to &quot;2、拉取 voc2coco 代码&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/Tony607/voc2coco.git</span></span></code></pre></div><h3 id="_3、转换-coco-数据集" tabindex="-1">3、转换 coco 数据集 <a class="header-anchor" href="#_3、转换-coco-数据集" aria-label="Permalink to &quot;3、转换 coco 数据集&quot;">​</a></h3><p>将所有的图片和xml文件放入train2017，从中挑选几组放入val2017（测试集）</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mmdetection/data/coco</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> voc2coco.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> train2017</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> annotations/instances_train2017.json</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> voc2coco.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> val2017</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> annotations/instances_val2017.json</span></span></code></pre></div><p>生成json文件</p><h3 id="_4、修改配置" tabindex="-1">4、修改配置 <a class="header-anchor" href="#_4、修改配置" aria-label="Permalink to &quot;4、修改配置&quot;">​</a></h3><p><strong>（1）读取模型名称</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> json</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">module_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> []</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">with</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./instances_train2017.json&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;r+&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> f:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    json_file </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> f.read()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">json_dict </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> json.loads(json_file)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">module_list </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> json_dict.get(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;categories&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> module_info </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> module_list:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> module_info.get(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    module_name.append(name)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(module_name)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;module_num:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">len</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(module_name))</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 注意对比instances_train2017.json里面模型名称的顺序，与CLASSES和coco_classes里面的顺序保持一致。</span></span></code></pre></div><p><strong>（2）修改 faster_rcnn_r101_2x_coco.py</strong></p><p><code>mmdetection/xianjin/faster_rcnn_r101_2x_coco.py</code></p><p>修改46行，<code>num_clasess</code>的值，新增1个，就 +1；</p><p><strong>（3）修改 coco.py</strong></p><p><code>mmdetection/mmdet/datasets/coco.py</code></p><p>CLASSES = ()，在里面添加模型名称；</p><p><strong>（4）修改 class_names.py</strong></p><p><code>mmdetection/mmdet/core/evaluation/class_names.py</code></p><p><code>coco_classes</code> 里面添加模型名称；</p><h3 id="_5、缓存清理" tabindex="-1">5、缓存清理 <a class="header-anchor" href="#_5、缓存清理" aria-label="Permalink to &quot;5、缓存清理&quot;">​</a></h3><p>删除 mmdetection/build 目录</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">python setup.py install</span></span></code></pre></div><h3 id="_6、训练模型" tabindex="-1">6、训练模型 <a class="header-anchor" href="#_6、训练模型" aria-label="Permalink to &quot;6、训练模型&quot;">​</a></h3><p>（1）指定自己配置的训练模型；</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tools/train.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xianjin/faster_rcnn_r101_fpn_2x_coco.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --gpus</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span></code></pre></div><p>（2）查看训练结果的测试集结果；</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tools/train.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xianjin/faster_rcnn_r101_fpn_2x_coco.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xianjin/epoch_24.pth</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --show</span></span></code></pre></div><p>（3）查看训练结果的准确度；</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tools/analysis_tools/analyze_logs.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> plot_curve</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xianjin/20210530_011907.log.json</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --keys</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> acc</span></span></code></pre></div><h3 id="_7、快捷操作" tabindex="-1">7、快捷操作 <a class="header-anchor" href="#_7、快捷操作" aria-label="Permalink to &quot;7、快捷操作&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run.py</span></span></code></pre></div><p>将以上 4 - 7 步操作整合成 run.py，一键完成。</p><h2 id="五、硬件环境" tabindex="-1">五、硬件环境 <a class="header-anchor" href="#五、硬件环境" aria-label="Permalink to &quot;五、硬件环境&quot;">​</a></h2><h4 id="_1、设备清单" tabindex="-1">1、设备清单 <a class="header-anchor" href="#_1、设备清单" aria-label="Permalink to &quot;1、设备清单&quot;">​</a></h4><ul><li>测试机至少一台；</li><li>服务端一台（目前仅支持AMD架构）；</li><li>采集盒一个 （ACASIS hdmi视频采集卡，<a href="https://item.jd.com/10024310742602.html" target="_blank" rel="noreferrer">https://item.jd.com/10024310742602.html</a> ）；</li><li>USB串口转USB键鼠协议线（优胜电子科技USB串口转USB键鼠协议线B类，<a href="https://item.taobao.com/item.htm?spm=a1z10.3-c.w4002-1385258877.57.7ea037891D6nKh&amp;id=611894882981" target="_blank" rel="noreferrer">https://item.taobao.com/item.htm?spm=a1z10.3-c.w4002-1385258877.57.7ea037891D6nKh&amp;id=611894882981</a> ）；</li></ul><h4 id="_2、硬件环境搭建" tabindex="-1">2、硬件环境搭建 <a class="header-anchor" href="#_2、硬件环境搭建" aria-label="Permalink to &quot;2、硬件环境搭建&quot;">​</a></h4><ul><li>采集盒，HDMI 端连接测试机， USB 端连接到服务器上；</li><li>USB 串口线，白色端连接服务器，黑色端连接测试机；</li><li>如果需要可以接USB延长线；</li><li>测试机上可以不接显示器；</li></ul><h4 id="_3、推荐配置" tabindex="-1">3、推荐配置 <a class="header-anchor" href="#_3、推荐配置" aria-label="Permalink to &quot;3、推荐配置&quot;">​</a></h4><p>执行用例的服务端对配置没有特殊要求，如果条件允许配置越高，识别速度用例执行速度越快。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">处理器:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Intel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">R</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Core</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">i3-10100</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CPU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3.60</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">GHz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (四核 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 八逻辑处理器</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">主板:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> B460-N2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">J</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">内存:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">GB</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TF32D4U2S1MEH-8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DDR4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3200</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">MHz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0.3ns))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">显示适配器:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> UHD</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Graphics</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 630</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">存储设备:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FORESEE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> P900F256GBH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (256 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">GB</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)/ST1000DM003-1SB102 (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1.00</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TB</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>测试机上不执行任何脚本，具体配置根据测试需要决定。</p><h2 id="六、usb-mk串口驱动方法" tabindex="-1">六、USB_MK串口驱动方法 <a class="header-anchor" href="#六、usb-mk串口驱动方法" aria-label="Permalink to &quot;六、USB_MK串口驱动方法&quot;">​</a></h2><p>位于control_method目录下的usb_mk.py文件</p><p>（1）列出可通信的端口</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> serial.tools.list_ports</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span></span></code></pre></div><p><img src="https://pic.imgdb.cn/item/64f054cb661c6c8e54ff5068.png" alt=""></p><p>（2）修改串口的权限</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 777</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/ttyACM0</span></span></code></pre></div><p>（3）实例化USB_MK</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UsbMk</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UsbMk(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/dev/ttyACM0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9600</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设备默认9600为波特率，控制传输速率</span></span></code></pre></div><p>（4）USB串口设备默认波特率为9600（经测试波特率9600准确性最好）。</p><h3 id="_1、键盘操作" tabindex="-1">1、键盘操作 <a class="header-anchor" href="#_1、键盘操作" aria-label="Permalink to &quot;1、键盘操作&quot;">​</a></h3><p>（1）按下键盘按键</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.press_key(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;enter&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 按下键盘enter键</span></span></code></pre></div><p>（2）按下键盘按键并且不放</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.press_key_down(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;enter&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 按下键盘enter键不放</span></span></code></pre></div><p>（3）组合按键</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.hot_key(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ctrl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;alt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;T&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 按下组合按键ctrl+alt+T调起终端</span></span></code></pre></div><p>（4）组合按键不放</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.hot_key_down(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ctrl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;alt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;T&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 按下组合按键ctrl+alt+T调起终端不放</span></span></code></pre></div><p>（5）释放所有键盘按键</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.key_up()   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 释放所有键盘按键</span></span></code></pre></div><p>（6）键盘输入字符串（汉字会自动转成拼音输入）</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.hot_key(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ctrl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;alt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;T&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 按下组合按键ctrl+alt+T调起终端</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.input_text(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;reboot&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 输入字符串reboot</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.press_key(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;enter&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 按下键盘enter键</span></span></code></pre></div><h3 id="_2、鼠标操作" tabindex="-1">2、鼠标操作 <a class="header-anchor" href="#_2、鼠标操作" aria-label="Permalink to &quot;2、鼠标操作&quot;">​</a></h3><p>（1）按下鼠标左键</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.click()   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 按下鼠标左键</span></span></code></pre></div><p>（2）按下鼠标左键不放</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.mouse_down()   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 按下鼠标左键不放</span></span></code></pre></div><p>（3）释放鼠标所有按键</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.mouse_up()   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 释放鼠标所有按键</span></span></code></pre></div><p>（3）按下鼠标右键</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.right_click()   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 释放鼠标所有按键</span></span></code></pre></div><p>（4）鼠标左键双击</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.double_click()   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 释放鼠标所有按键</span></span></code></pre></div><p>（5）恢复鼠标至初始位置，默认左上角</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.move_to_init()   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 恢复鼠标至初始位置，默认左上角</span></span></code></pre></div><p>（6）移动鼠标至相对坐标</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.move_rel(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 鼠标向左边移动100个像素，向下移动200个像素</span></span></code></pre></div><p>（7）以屏幕左上角为圆心坐标移动鼠标至屏幕绝对坐标</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.move_to(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 鼠标移动至屏幕坐标（100, 200）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 注：因Linux系统不支持鼠标绝对路径，所以会鼠标会先移动到初始位置</span></span></code></pre></div><p>（8）按下鼠标左键，拖动到绝对坐标位置</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.drag_to(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 按下鼠标拖动至屏幕坐标（100, 200）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 注：因Linux系统不支持鼠标绝对路径，所以会鼠标会先移动到初始位置</span></span></code></pre></div><p>（9）按下鼠标左键，拖动到相对坐标位置</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.drag_rel(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 鼠标向左边移动100个像素，向下移动200个像素</span></span></code></pre></div><h2 id="七、方法调用入参规则" tabindex="-1">七、方法调用入参规则 <a class="header-anchor" href="#七、方法调用入参规则" aria-label="Permalink to &quot;七、方法调用入参规则&quot;">​</a></h2><h3 id="_1、基类" tabindex="-1">1、基类 <a class="header-anchor" href="#_1、基类" aria-label="Permalink to &quot;1、基类&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Base</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> __init__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">._obj </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> image</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">._usb </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> usb_mk</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> find_element_by_ai</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self, element):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">._obj.find_element(element)</span></span></code></pre></div><h3 id="_2、入参说明" tabindex="-1">2、入参说明 <a class="header-anchor" href="#_2、入参说明" aria-label="Permalink to &quot;2、入参说明&quot;">​</a></h3><p>图像识别方法入口为 Base 类下的 find_element_by_ai 。仅接受一个参数 element，类型为 string。</p><p>可识别的 string 格式：</p><p>（1）大图标（ 图标大于 40 像素）：识别某个大图标，例：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base().find_element_by_ai(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;window&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>（2）大图标 / 小图标（图标小于 40 像素）：识别某个小图标，例：window/search_btn</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base().find_element_by_ai(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;window/search_btn&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>（3）大图标 / OCR：识别某个大图标内的文字，例：menu/属性</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base().find_element_by_ai(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;menu/属性&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>（4）OCR：全屏识别文字</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base().find_element_by_ai(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;搜索&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="八、隐藏鼠标" tabindex="-1">八、隐藏鼠标 <a class="header-anchor" href="#八、隐藏鼠标" aria-label="Permalink to &quot;八、隐藏鼠标&quot;">​</a></h2><p>通过采集盒传输过来的视频流，在识别过程中可能受到鼠标影响，因此用例执行过程中需要隐藏鼠标。</p><p>屏蔽鼠标光标显示</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> /etc/lightdm/lightdm.conf</span></span></code></pre></div><p>在<code>[Seat:*]</code>下面添加参数</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xserver-command</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">X</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> -bs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -core</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -nocursor</span></span></code></pre></div><h2 id="九、智能自动化的意义" tabindex="-1">九、智能自动化的意义 <a class="header-anchor" href="#九、智能自动化的意义" aria-label="Permalink to &quot;九、智能自动化的意义&quot;">​</a></h2><p><strong>1、改善 Acessibility 定位的稳定性问题</strong></p><p>Acessibility 属性定位存在偶尔失效的情况</p><p>（1）开发在做新需求开发时可能涉及到对属性标签的修改或者层级的调整，可能造成自动化用例无法定位到元素。</p><ul><li>比如1040阶段，音乐重构的时候，开发对部分属性和层级做了修改，导致自动化用例定位方法80%需要修改。</li><li>开发新功能的时候偶尔也会对属性做调整，遇到5次。</li></ul><p>（2）目前主要使用Dogtail识别应用Acessibility属性进行定位，是获取应用当前界面的属性tree，在应用跳转后，Dogtail存在无法及时获取当前属性列表的情况。</p><ul><li>多媒体调用文管窗口的时候，出现找不到文管里面元素的情况，目前出现10+次。</li><li>应用设置页面的属性偶尔存在找不到的情况，遇到5次。</li></ul><p>（3）Dogtail工具本身存在问题，有时定位元素的时候很慢，让人无法接受，目前出现过很多次。</p><ul><li>执行用例的时候，定位元素的时间比平常慢3倍，出现4次。</li></ul><p><strong>2、解决了使用绝对图像识别定位的容错性差的问题</strong></p><p>部分控件无法添加 Acessibility 属性从而使用图像识别定位出现的容错性差的问题。</p><p>（1）图像识别定位方法需要维护大量的目标图片资源，在 UI 发生变化之后，会涉及到目标资源的替换，比较耗费人力。</p><p>（2）图像识别的定位方法对比精度比较搞，如果UI 的变更会造成无法准确定位到，自动化脚本健壮性不足。</p><p><strong>3、使用机器分离，解决了自动化脚本对应用的影响，真实还原用户的使用场景</strong></p><p>机器分离的架构设计，保证了测试机的测试环境完全等同于用户，排除测试脚本的影响。</p><p>（1）目前的功能自动化是在测试机上直接运行自动化测试脚本，加上用例执行过程中我们添加了一些进程监控、视频录制等功能，自动化脚本本身会消耗一些系统资源，无法还原真是的用户使用场景。</p><p>（2）性能测试需要排除其他程序的资源消耗影响，性能自动化采用机器分离，保证了性能数据的准确性。</p><p>以前的用例执行耗时没条在30秒左右，现在用例耗时在10秒。</p><p><strong>4、解决了UI 调整导致定位失败的不稳定性问题</strong></p><p>（1）解决了因 UI 调整导致控件位置变化或色差变化后定位不准确的问题，只要控件文案和控件外边框无变化均可准确定位；</p><p>（2）目前也会采用基于UI的定位方案，如果UI位置有调整，会导致元素无法定位。</p><p><strong>5、简化了用例结构，提升编写友好度</strong></p><p>（1）智能自动化识别元素的方法只有一个，就是基于我们训练的模型识别视频流中的元素，经过脚本封装之后，在自动化用例中所有定位的操作都只需要调用这一个方法就行了，编写自动化脚本的难度大大降低。</p><p>（2）也是由于调用方法简单，在 UI 自动化测试框架中的分层结构将会减少，多继承的情况会减少，自动化代码的调用结构也会变得简单，而且功能测试同学编写自动化用例会更加容易上手。</p><p>以前写用例由于需要结合不同的模块，调用不同的方法，编写一条用例并完成调试的时间平均在20-30分钟，现在写用例脚本能在5分钟左右完成。</p>`,214)]))}const c=i(t,[["render",l]]);export{g as __pageData,c as default};
