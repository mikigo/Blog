import{_ as i,c as a,R as e,o as l}from"./chunks/framework.DzXLMhZy.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{"Author":"mikigo"},"headers":[],"relativePath":"编程基础/前后端/后端/MySQL基础.md","filePath":"编程基础/前后端/后端/MySQL基础.md","lastUpdated":1736789675000}'),p={name:"编程基础/前后端/后端/MySQL基础.md"};function t(n,s,h,k,d,o){return l(),a("div",null,s[0]||(s[0]=[e(`<h2 id="mysql基础" tabindex="-1">MySQL基础 <a class="header-anchor" href="#mysql基础" aria-label="Permalink to &quot;MySQL基础&quot;">​</a></h2><h2 id="一、数据库基础" tabindex="-1">一、数据库基础 <a class="header-anchor" href="#一、数据库基础" aria-label="Permalink to &quot;一、数据库基础&quot;">​</a></h2><h3 id="_1、数据库概述" tabindex="-1">1、数据库概述 <a class="header-anchor" href="#_1、数据库概述" aria-label="Permalink to &quot;1、数据库概述&quot;">​</a></h3><p>①概念：依照某种数据模型组织起来并存放在二级存储器（硬盘）中的数据集合。</p><p>②主流的数据库：关系型的有 <code>MySQL</code>、<code>SQLserver</code>、<code>oracle</code>、<code>DB2</code>，非关系型：<code>HBase</code>、<code>NoSQL</code>（<code>mongoDB</code>、<code>redis</code>、<code>memache</code>）</p><h3 id="_2、概念模型" tabindex="-1">2、概念模型 <a class="header-anchor" href="#_2、概念模型" aria-label="Permalink to &quot;2、概念模型&quot;">​</a></h3><p>① 概念：是现实世界到机器世界的一个中间层侧，是数据库设计人员和用户之间交流的工具，通过它可以转换得到数据模型。</p><p>② 特点：简单清晰，易于理解，较强的语义表达能力。</p><p>③ 涉及到的基本概念：</p><ul><li><p>实体（一本书，一个人）</p></li><li><p>属性（对实体的描述）</p></li><li><p>码：</p><ul><li><p>超码：能够唯一确定的一个实体的一个或多个属性的集合。</p></li><li><p>候选码：能够确定一个实体的多个属性。</p></li><li><p>主码：能够唯一确定的一个实体的属性。</p></li></ul></li><li><p>实体型和实体集：课程（课程号、课程名）就是一个实体型，所有课程组成一个实体集。</p></li><li><p>联系</p><ul><li><p>一对一（<code>1:1</code>）</p></li><li><p>一对多（<code>1：n</code>）</p></li><li><p>多对多（<code>m：n</code>）</p></li></ul></li></ul><p>④ E-R模型和E-R图</p><ul><li>用矩形表示实体，用椭圆表示属性，用菱形表示关系，用直线连接。</li></ul><h3 id="_3、数据模型" tabindex="-1">3、数据模型 <a class="header-anchor" href="#_3、数据模型" aria-label="Permalink to &quot;3、数据模型&quot;">​</a></h3><p>① 数据模型的特点</p><ul><li><p>能比较真实的模拟现实世界；</p></li><li><p>容易理解；</p></li><li><p>便于在计算机上实现；</p></li></ul><p>② 数据模型的组成要素</p><ul><li><p>数据结构（静态特性的描述）</p></li><li><p>数据操作（主要是查询和更新）</p></li><li><p>完整性约束条件</p></li></ul><p>③ 常见的数据模型</p><ul><li><p>层次模型</p><ul><li><p>定义：用树型结构表示实体之间的联系的模型</p></li><li><p>特点：在一个层次模型中的限制条件是：有且仅有一个节点，无父节点，此节点为树的根；其他节点有且仅有一个父节点。</p></li></ul></li><li><p>网状模型</p><ul><li><p>定义：用网络结构表示实体类型及其实体之间联系的模型</p></li><li><p>特点：</p><ul><li><p>允许一个以上的节点无父节点</p></li><li><p>一个节点可以有多于一个父节点</p></li></ul></li></ul></li><li><p>关系模型</p><ul><li><p>定义：用二维表的形式表示实体和实体之间联系的数据模型</p></li><li><p>特点：</p><ul><li><p>数据结构简单（二维表）</p></li><li><p>扎实的理论基础：</p></li></ul></li><li><p>关系运算理论</p></li><li><p>关系模式设计理论</p></li><li><p>关系数据模型的三种约束完整性</p><ul><li><p>实体完整性：实体的主键不能取空值。</p></li><li><p>参照完整性：是指参照关系中每个元素的外码要么为空(NULL)，要么等于被参照关系中某个元素的主码。</p></li><li><p>用户定义完整性：指对关系中每个属性的取值作一个限制(或称为约束)的具体定义。比如 性别属性只能取”男“或”女“ ，再就是年龄的取值范围，可以取值0-130 ，但不能取负数，因为年龄不可能是负数。</p></li></ul></li></ul></li></ul><h2 id="二、mysql基本知识" tabindex="-1">二、MySQL基本知识 <a class="header-anchor" href="#二、mysql基本知识" aria-label="Permalink to &quot;二、MySQL基本知识&quot;">​</a></h2><h3 id="_1-mysql概述" tabindex="-1">1.MySQL概述 <a class="header-anchor" href="#_1-mysql概述" aria-label="Permalink to &quot;1.MySQL概述&quot;">​</a></h3><p>（1）<code>MySQL</code> 是一个小型关系型数据库管理系统。</p><p>（2）特点：</p><ul><li><p>图形化用户界面，使得系统管理和数据库管理跟家直观、简单。</p></li><li><p>丰富的编程接口工具</p></li><li><p>支持多用户、多线程</p></li><li><p>跨平台使用</p></li></ul><h3 id="_2-mysql的安装" tabindex="-1">2.MySQL的安装 <a class="header-anchor" href="#_2-mysql的安装" aria-label="Permalink to &quot;2.MySQL的安装&quot;">​</a></h3><p>(1) <code>MySQL</code>为免费开源，可以在官网下载安装；<code>Github</code> 链接：<a href="https://github.com/mysql/mysql-server" target="_blank" rel="noreferrer">https://github.com/mysql/mysql-server</a></p><p>(2) <code>DBeaver</code> 是 <code>MySQL</code> 的图形化管理软件，<code>Github</code> 链接：<a href="https://github.com/dbeaver/dbeaver" target="_blank" rel="noreferrer">https://github.com/dbeaver/dbeaver</a></p><p>(3) 点击【连接】，选择 <code>MySQL</code></p><p>(4) 输入连接名（可以自己取名字），输入服务器 <code>IP</code> 地址（本次直接用 <code>localhost</code> 即可），输入服务器端口号、用户名（root）和密码（可以为空）</p><h3 id="_3-远程访问数据库" tabindex="-1">3.远程访问数据库 <a class="header-anchor" href="#_3-远程访问数据库" aria-label="Permalink to &quot;3.远程访问数据库&quot;">​</a></h3><p>(1) 服务器端需要授权：<code>MySQL</code>查询编辑上输入：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">grant</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> all privileges </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">on*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">’用户名’@’%’ identified </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">by</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">’密码’ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">with</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> grant</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> option</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p><code>%</code>，是指对所有人，如果是针对某个人，可替换为对应的 <code>IP</code></p><p>(2) 关闭防火墙</p><p>(3) <code>Flush privileges</code>（刷新权限）</p><h3 id="_4-mysql系统数据简介" tabindex="-1">4.MySQL系统数据简介 <a class="header-anchor" href="#_4-mysql系统数据简介" aria-label="Permalink to &quot;4.MySQL系统数据简介&quot;">​</a></h3><p>(1) 四个系统数据库</p><ul><li><code>Information schema</code> 是信息数据库。保存 <code>MySQL</code> 服务器维护的其他数据库的信息。</li><li><code>MySQL</code> 系统数据库，主要存储了一些存储 <code>MySQL </code>服务的系统信息表。</li><li><code>Performance_schema</code> 用于收集数据库服务器性能参数。</li><li><code>Sys</code> 系统数据库，可以了解系统的元数据信息。</li></ul><p>(2) 常用的 <code>MySQL</code> 数据类型</p><ul><li><code>int</code> 整型，可以存储 <code> 2</code> 的 <code>31</code> 次方到 <code>2</code> 的 <code>31</code> 次方之间的整数。占用4个字节。</li><li><code>Float</code> 浮点型，小数，在 <code>MySQL</code> 里是 <code>4</code> 个字节单精度。</li><li><code>Char</code> 字符型，存储制定长度的定长非统一编码型的数据。（固定长度）</li><li><code>Varchar</code> 字符型，指定最大长度。（可以小于）</li></ul><p>(3) 数据库的基本操作</p><ul><li><p><code>create database dbname;</code>（创建数据库）</p></li><li><p><code>Drop database dbname;</code>（删除数据库）</p></li><li><p><code>Create table name;</code>（创建表）</p></li><li><p><code>Varchar(5)</code> 长度为5个字符以内</p></li><li><p>Primary key\`（主键）</p></li><li><p>Not null\`（不能为空）</p></li><li><p><code>Create database dbname default character set utf8 collate utf8_general_ci;</code> (创建一个字符集为utf8的数据库，否则输入汉字时，会变成问号）</p></li><li><p><code>Create database test</code> ：代表的是创建数据库 test；</p></li><li><p><code>default character set utf8</code> ：代表的是将默认编码格式设置为utf8格式；</p></li><li><p><code>collate utf8_general_ci</code> ：代表的是数据库校对规则；</p></li></ul><h2 id="三、数据库基本操作" tabindex="-1">三、数据库基本操作 <a class="header-anchor" href="#三、数据库基本操作" aria-label="Permalink to &quot;三、数据库基本操作&quot;">​</a></h2><h3 id="_1-数据库对象" tabindex="-1">1.数据库对象 <a class="header-anchor" href="#_1-数据库对象" aria-label="Permalink to &quot;1.数据库对象&quot;">​</a></h3><p>（1）表：有行和列表示；</p><ul><li><p>每列为一个字段。</p></li><li><p>每行为一条记录。</p></li><li><p>有一个唯一的主键，主键不能为空。</p></li></ul><p>（2）外键：两个实体中的主键，在关系表中成为外键。</p><p>（3）索引（<code>index</code>）：根据指定的数据库表列建立起来的顺序；它提供了快速访问数据的途径。索引所指向的列中的数据不重复。</p><p>（4）视图（<code>view</code>）：是查询数据库产生的，从数据库去相应的数据进行呈现，视图内数据无法修改，在基表中修改后，视图表会自动修改。</p><p>（5）触发器（<code>trigger</code> .扳机、开枪）：设置一个触发的动作，对表自动进行增删改查。</p><p>（6）存储过程（<code>store procedure</code>）:存储在数据库的 <code>SQL</code> 程序。</p><h3 id="_2-表约束" tabindex="-1">2.表约束 <a class="header-anchor" href="#_2-表约束" aria-label="Permalink to &quot;2.表约束&quot;">​</a></h3><ul><li><p>主键约束（<code>primary key</code>）</p><ul><li><p>一个表通过一个列或多个列组合的数据来唯一标识表总的每一行，这一列或多个列的组合成为主键。</p><ul><li><p>主键列具有唯一性；</p></li><li><p>一个表只有一个主键；</p></li><li><p><code>MySQL</code> 通过主键建议唯一索引，加快对主键的查询速度；</p></li></ul></li><li><p>主键约束两种写法</p><ul><li><p>列级约束：直接在字段后定义 <code>primary key</code>；</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Create</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> table</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mikigo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">m_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">primary key</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div></li><li><p>表级约束：先写完表，再定义表里的 <code>primary key</code>；</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Create</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> table</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mikigo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">m_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varchar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">m_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varchar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">11</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pk_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">primary key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m_id)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div></li></ul></li></ul></li><li><p>外键约束（<code>foreign</code>）</p><p>定义：建立和强调两个表之间的关系，即关系表的一个列与另一个表中的具有唯一性的列相关，这个列就是关系表中的外键。</p></li><li><p>唯一性约束（<code>unique</code>）</p><ul><li><p>保证在非主键的指定唯一性的列上不会出现重复的数据（在学生表中指定了学好为主键，身份证列作为非主键建立唯一性约束，则身份证号不能重复）；</p></li><li><p>唯一性约束可以建立在多个非主键的列上，而且允许为空值（和主键约束的区别）；</p></li></ul></li><li><p>检查约束（<code>check</code>）：在 <code>MySQL</code> 上没有用；</p></li><li><p>默认值约束（<code>default</code>）：如果用户没有明确出某一列的值，将显示为默认值；</p></li><li><p>空值约束（<code>null</code>）：不为空时约束为 <code>not null</code>， 为空为 <code>null</code>，为空可以不写。</p></li></ul><h3 id="_3-sql结构化查询语句" tabindex="-1">3.SQL结构化查询语句 <a class="header-anchor" href="#_3-sql结构化查询语句" aria-label="Permalink to &quot;3.SQL结构化查询语句&quot;">​</a></h3><p>SQL（structrued query language）查询语句包含四类：</p><ul><li><p>数据定义语言（<code>DDL</code>，data definition language）</p></li><li><p>数据操纵语言（<code>DML</code>,data manipulation language）</p></li><li><p>数据控制语言（<code>DCL</code>,data control language）</p></li><li><p>系统存储语言（System Stored procedure）</p></li></ul><h4 id="_3-1-数据定义语言" tabindex="-1">3.1.数据定义语言 <a class="header-anchor" href="#_3-1-数据定义语言" aria-label="Permalink to &quot;3.1.数据定义语言&quot;">​</a></h4><p>(1) <code>Create table</code>（建表）</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Create</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> table</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 表名</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sname </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varchar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">not null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Sid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> varchar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">primary key</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>(2) <code>Create index</code>（建索引）</p><p>(3) <code>Alter table</code>（修改表）</p><p>(4) <code>Drop table</code>（删表）</p><p>① <code>Drop table 表名</code>（删除某个表）</p><p>(5) <code>Drop index</code>（删索引）</p><p>(6) <code>Insert into....select...</code> 表示将一个表中的数据插入到另一个表中</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Insert into</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> student(sno,ssex,sname) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sno,ssex,sname </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> student_1</span></span></code></pre></div><p>(7) <code>update 表名 set 列名=’更新值’ Where..</code> (表示更新某个字段数据）</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> student</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sname</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">’mikigo’</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sno</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">401</span></span></code></pre></div><p>(8) <code>delete from 表名 Where..</code> （表示删除某行数据）(drop 是直接删表，delete是对表中的数据进行删除)</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Delete</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> student</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sno</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">101</span></span></code></pre></div><p>（9）alter table修改表</p><ul><li><p>修改表名：<code>Alter table 原表名 rename to 目标表名</code></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Alter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> student rename </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> student_1</span></span></code></pre></div></li><li><p>新增字段：<code>Alter table 表名 add 字段名 varchar(50) null</code></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Alter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> student </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pass_or_not </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varchar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">（</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">）</span></span></code></pre></div></li><li><p>修改字段属性：<code>Alter table 表名 change 原字段名 新字段名 varchar(4)</code></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> Alter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> student change sno sno </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varchar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">primary key</span></span></code></pre></div></li><li><p>删除字段：<code>alter table 表名 drop column 字段名</code></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> Alter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> student </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">drop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> column pass_or_not</span></span></code></pre></div></li></ul><h4 id="_3-2-数据操纵语言" tabindex="-1">3.2.数据操纵语言 <a class="header-anchor" href="#_3-2-数据操纵语言" aria-label="Permalink to &quot;3.2.数据操纵语言&quot;">​</a></h4><h5 id="_1-insert插入语句" tabindex="-1">(1) insert插入语句 <a class="header-anchor" href="#_1-insert插入语句" aria-label="Permalink to &quot;(1) insert插入语句&quot;">​</a></h5><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Insert into</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> student(sno, sname)（表名）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Values</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">（</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">001</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">，mikigo）</span></span></code></pre></div><p>表示向 <code>student</code>表中插入一行数据。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Insert into</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> student2（sno,sname）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> student1 (s_no,s_name)</span></span></code></pre></div><p>表示将 <code>student1</code> 中的内容插入到 <code>student2</code> 中。</p><h5 id="_2-select查询" tabindex="-1">(2) select查询 <a class="header-anchor" href="#_2-select查询" aria-label="Permalink to &quot;(2) select查询&quot;">​</a></h5><p>① <code>Select * From student</code></p><p>(查询 <code>student</code> 表中所有列)</p><p>② <code>Distinct</code> 过滤重复行</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Select distinct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sno </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> score</span></span></code></pre></div><p>（从成绩表中查询剔重后的学号）</p><h5 id="_3-where-子句-指定条件查询" tabindex="-1">(3) Where 子句，指定条件查询 <a class="header-anchor" href="#_3-where-子句-指定条件查询" aria-label="Permalink to &quot;(3) Where 子句，指定条件查询&quot;">​</a></h5><p>① 范围运算符 <code>between...and..</code>，<code>not between....and...</code>（（不）在什么之间）</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> title , price</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">From</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> titles</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> price </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">between</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> and</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span></span></code></pre></div><p>② 列表运算符 <code>in</code> ，<code>not in</code>（表示在指定项中）</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sname</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">From</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> student</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sno </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (‘</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">001</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">’,’</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">002</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">’)</span></span></code></pre></div><p>③ 空值判断符 <code>is null</code> , <code>is not null</code> （是否为空）</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> title , price</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">From</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> titles</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> price </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">is</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> null</span></span></code></pre></div><p>④ 逻辑运算符 <code>and</code> , <code>or</code></p><ul><li><code>And</code> 表示同时满足</li><li><code>Or</code> 表示满足一个条件即可</li></ul><h5 id="_4-模糊匹配like-not-like" tabindex="-1">(4) 模糊匹配like ， not like <a class="header-anchor" href="#_4-模糊匹配like-not-like" aria-label="Permalink to &quot;(4) 模糊匹配like ， not like&quot;">​</a></h5><p>① 匹配任意类型长度的字符用 <code>%</code>，固定长度字符用下划线 <code>_</code></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sname ,sage</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">From</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> student</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sname </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">like</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ‘%王%’ (‘王_’)</span></span></code></pre></div><p>表示查询命中中带有“王”的姓名</p><p>② 指定一个字符、字符串或范围用[ ]、<code>[^ ]</code></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sname</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">From</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> student</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sname </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">like</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ‘[b-k]%’</span></span></code></pre></div><p>表示名字开头是 <code>b-k</code> 的姓名</p><h5 id="_5-集合函数-聚合函数" tabindex="-1">(5) 集合函数（聚合函数） <a class="header-anchor" href="#_5-集合函数-聚合函数" aria-label="Permalink to &quot;(5) 集合函数（聚合函数）&quot;">​</a></h5><p>① 平均值 <code>avg</code></p><p>② 总和 <code>sum</code></p><p>③ 最小值 <code>min</code></p><p>④ 最大值 <code>max</code></p><p>⑤ 计数 <code>count</code></p><p>集合函数使用在select 后面</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Select</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> min</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(price) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> titles</span></span></code></pre></div><p>表示在表中，取价格的最小值，min(price) as 价格</p><h5 id="_6-group-by-子句-分组" tabindex="-1">(6) Group by 子句，分组 <a class="header-anchor" href="#_6-group-by-子句-分组" aria-label="Permalink to &quot;(6) Group by 子句，分组&quot;">​</a></h5><p>① <code>Group by</code> 子句中，不能使用集合函数</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sname,ssex</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">From</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> student</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Group by</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ssex</span></span></code></pre></div><p>表示已性别作为分组，统计显示姓名和性别</p><p>② <code>select</code> 中多个非集合项出现时，<code>group by</code> 里面也要有同样的非集合项</p><h5 id="_7-order-by-排序" tabindex="-1">(7) Order by 排序： <a class="header-anchor" href="#_7-order-by-排序" aria-label="Permalink to &quot;(7) Order by 排序：&quot;">​</a></h5><p>对查询结果按照升序（<code>asc</code>）或降序（<code>desc</code>）排列。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sname,sage</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">From</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> student</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ssex</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">’男’</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Order by</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">desc</span></span></code></pre></div><p>表示将 <code>student</code> 表中的男生，按照年龄降序排列，显示姓名和年龄</p><h5 id="_8-having-条件" tabindex="-1">(8)having ...条件 <a class="header-anchor" href="#_8-having-条件" aria-label="Permalink to &quot;(8)having ...条件&quot;">​</a></h5><p><code>Having</code> 子句与 <code>group by</code> 使用表示增加某个条件。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> count</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">From</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> student</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Group by</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ssex</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Having</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> age</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span></span></code></pre></div><h5 id="_9-嵌套查询" tabindex="-1">(9)嵌套查询 <a class="header-anchor" href="#_9-嵌套查询" aria-label="Permalink to &quot;(9)嵌套查询&quot;">​</a></h5><p>①<code>Where 表达式 （not）in (子查询)</code></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> score</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cno </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cno</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> course</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tno </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tno </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> teacherwhere depart </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;电子工程系&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span></code></pre></div><p>②比较运算符</p><ul><li><code>Any</code> : <code>where degree &gt;any(81.85) </code>表示degree 大于81或85中的任意一个。</li><li><code>All</code> : <code>where degree &gt;all(81.85) </code>表示degree 大于81或85中的每一个。</li><li><code>Some</code> ：同 any</li></ul><p>③联接查询</p><ul><li><p>内连接</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> student </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">inner join</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> score </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">on</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> student</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sno</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">score</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sno</span></span></code></pre></div><p>或</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Where</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> student</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sno</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">score</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sno</span></span></code></pre></div></li><li><p>外连接</p><ul><li><p>左联接：（以左边表为基准，左边所有数据要出现，右边表无数据的，为空值）</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> course </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">left join</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> score </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">on</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> course</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cno</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">score</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cno</span></span></code></pre></div></li><li><p>右联接： (以右边表为基准，右边所有数据要出现，左边表无数据的，为空值）</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> course </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">right join</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> score </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">on</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> course</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cno</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">score</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cno</span></span></code></pre></div></li></ul></li></ul><h4 id="_3-3-数据控制语言-dcl" tabindex="-1">3.3.数据控制语言（<code>DCL</code>） <a class="header-anchor" href="#_3-3-数据控制语言-dcl" aria-label="Permalink to &quot;3.3.数据控制语言（\`DCL\`）&quot;">​</a></h4><p>（1）grant 语句</p><p><code>Grant 权限1，权限2 on 表名 to uername</code></p><p>为某个用户授予某个权限</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">grant</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> update</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> student </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mikigo</span></span></code></pre></div><p>（2）<code>Revoke</code> 语句</p><p><code>Revoke 权限1，权限2 on 表名 from uername</code></p><p>收回某个用户的某个权限</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Revoke</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> update</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> student </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mikigo</span></span></code></pre></div><h4 id="_3-4-view-视图" tabindex="-1">3.4.View 视图 <a class="header-anchor" href="#_3-4-view-视图" aria-label="Permalink to &quot;3.4.View 视图&quot;">​</a></h4><p>（1）视图是某个查询结果的虚表。试图对应的数据并不实际存在。</p><p>（2）语法：<code>create view 视图名称 As Select 列名称 from 表名称 where 条件</code></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Create</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> view</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mikigo</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">As</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">From</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Student</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ssex</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">’男’</span></span></code></pre></div><p>（3）修改视图：drop view 视图名称。</p><h4 id="_3-5-procedure-存储过程" tabindex="-1">3.5.procedure 存储过程 <a class="header-anchor" href="#_3-5-procedure-存储过程" aria-label="Permalink to &quot;3.5.procedure 存储过程&quot;">​</a></h4><p>（1）存储过程的三个组成部分。</p><ul><li>所有的输入参数以及传给调用者的输出参数；</li><li>被执行的正对数据库的操作语句，包括调用其它存储过程的语句；</li><li>返回给调用者的状态值，以指明调用是否成功；</li></ul><p>（2）使用 <code>DBeaver</code> 创建存储过程</p><ul><li><p>点击函数右键，选择新建函数，输入定义模式、参数名、数据类型；</p></li><li><p>点击完成，在 <code>begin</code> 和 <code>end</code> 之间存储过程语句，点击保存，设置过程名；</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Begin</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">While</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> do</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Insert into</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> score </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">values</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">floor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">110</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),’</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">245</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">’,’</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">99</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">’);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">End</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">End</span></span></code></pre></div><p>调用的使用：<code>call</code> 过程名（赋值）；</p></li></ul><h4 id="_3-6-trigger-触发器" tabindex="-1">3.6.trigger 触发器 <a class="header-anchor" href="#_3-6-trigger-触发器" aria-label="Permalink to &quot;3.6.trigger 触发器&quot;">​</a></h4><p>（1）触发器是一种特殊类型的存储过程，主要通过事件进行触发而被执行。触发器用于MySQL约束、默认值和规则的完整新的检查。</p><p>（2）触发器类型：</p><ul><li><code>Update</code> 在更新时触发；</li><li><code>Insert</code> 在插入时触发；</li><li><code>Delete</code> 在删除操作时触发；</li><li><code>After</code> 在一个触发动作之后激活；</li></ul><p>（3）语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Create</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> trigger</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> huang</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">After</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> update</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> student </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> each </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">row</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Insert into</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> student_1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Values</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">404</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,’明天’,’男’)</span></span></code></pre></div><p>表示当对 <code>student</code> 表进行更新之后，将一组数据插入到 <code>student_1</code> 表中。</p><h4 id="_3-7-常见函数" tabindex="-1">3.7.常见函数 <a class="header-anchor" href="#_3-7-常见函数" aria-label="Permalink to &quot;3.7.常见函数&quot;">​</a></h4><p>（1）<code>Left/right</code> 函数</p><p><code>Select left (‘kdhoa’,3)</code> 表示从左向右，截取3个字节</p><p>（2）<code>Length</code> 函数</p><p><code>Select length(‘ijgoado’)</code> 表示括号内字符的长度</p><p>（3）<code>Replace</code> 函数</p><p><code>Select replace (‘ydk’,’k’,’a’)</code> 表示将字符中的k 替换成a</p><p>（4）<code>Substring</code> 函数</p><p><code>Select substring (‘eohgdhd’,2,3)</code> 表示从第2位开始取，往后取3位(ohg)</p><p>（5）日期函数</p><ul><li><code>Now( )</code>：表示当前日期，精确到时分秒 <code>2019-10-29 19:31:20</code> ；</li><li><code>curdate( )</code>：表示当前时间，精确到日 <code>2019-10-29</code></li><li><code>Year( )</code>：表示日期年份 <code>2019</code></li><li><code>Month( )</code>：表示日期月份 <code>10</code></li><li><code>Day( )</code>：表示日期的日 <code>29</code></li></ul><p>（6）<code>Datediff</code> 函数</p><ul><li>表示函数返回两个日期之间的天数</li><li><code>Select datediff (‘time1’,’time2’)</code> 计算逻辑是 <code>time1-time2</code></li></ul>`,167)]))}const g=i(p,[["render",t]]);export{c as __pageData,g as default};
