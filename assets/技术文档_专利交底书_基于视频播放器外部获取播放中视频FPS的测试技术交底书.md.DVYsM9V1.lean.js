import{_ as t,c as e,R as l,o as p}from"./chunks/framework.CuFLN7ac.js";const i="/Blog/%E5%9F%BA%E4%BA%8E%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E5%99%A8%E5%A4%96%E9%83%A8%E8%8E%B7%E5%8F%96%E6%92%AD%E6%94%BE%E4%B8%AD%E8%A7%86%E9%A2%91FPS%E7%9A%84%E6%B5%8B%E8%AF%95%E6%8A%80%E6%9C%AF%E4%BA%A4%E5%BA%95%E4%B9%A6_assets/image4.png",o="/Blog/%E5%9F%BA%E4%BA%8E%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E5%99%A8%E5%A4%96%E9%83%A8%E8%8E%B7%E5%8F%96%E6%92%AD%E6%94%BE%E4%B8%AD%E8%A7%86%E9%A2%91FPS%E7%9A%84%E6%B5%8B%E8%AF%95%E6%8A%80%E6%9C%AF%E4%BA%A4%E5%BA%95%E4%B9%A6_assets/image5.png",r="/Blog/%E5%9F%BA%E4%BA%8E%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E5%99%A8%E5%A4%96%E9%83%A8%E8%8E%B7%E5%8F%96%E6%92%AD%E6%94%BE%E4%B8%AD%E8%A7%86%E9%A2%91FPS%E7%9A%84%E6%B5%8B%E8%AF%95%E6%8A%80%E6%9C%AF%E4%BA%A4%E5%BA%95%E4%B9%A6_assets/image7.png",s="/Blog/%E5%9F%BA%E4%BA%8E%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E5%99%A8%E5%A4%96%E9%83%A8%E8%8E%B7%E5%8F%96%E6%92%AD%E6%94%BE%E4%B8%AD%E8%A7%86%E9%A2%91FPS%E7%9A%84%E6%B5%8B%E8%AF%95%E6%8A%80%E6%9C%AF%E4%BA%A4%E5%BA%95%E4%B9%A6_assets/image10.png",b=JSON.parse('{"title":"基于视频播放器获取播放中视频资源FPS的测试技术交底书","description":"","frontmatter":{"Author":"海针"},"headers":[],"relativePath":"技术文档/专利交底书/基于视频播放器外部获取播放中视频FPS的测试技术交底书.md","filePath":"技术文档/专利交底书/基于视频播放器外部获取播放中视频FPS的测试技术交底书.md","lastUpdated":1736789790000}'),E={name:"技术文档/专利交底书/基于视频播放器外部获取播放中视频FPS的测试技术交底书.md"};function n(h,a,d,A,c,_){return p(),e("div",null,a[0]||(a[0]=[l(`<h1 id="基于视频播放器获取播放中视频资源fps的测试技术交底书" tabindex="-1">基于视频播放器获取播放中视频资源FPS的测试技术交底书 <a class="header-anchor" href="#基于视频播放器获取播放中视频资源fps的测试技术交底书" aria-label="Permalink to &quot;基于视频播放器获取播放中视频资源FPS的测试技术交底书&quot;">​</a></h1><h2 id="_0、缩略语和关键术语定义" tabindex="-1">0、缩略语和关键术语定义 <a class="header-anchor" href="#_0、缩略语和关键术语定义" aria-label="Permalink to &quot;0、缩略语和关键术语定义&quot;">​</a></h2><table><thead><tr><th style="text-align:left;"><strong>名词</strong></th><th style="text-align:left;"><strong>全称</strong></th><th style="text-align:left;"><strong>描述</strong></th></tr></thead><tbody><tr><td style="text-align:left;">帧</td><td style="text-align:left;">Frame</td><td style="text-align:left;">一帧就是一幅静止的画面，连续的帧就形成动画</td></tr><tr><td style="text-align:left;">FPS</td><td style="text-align:left;">Frames Per Second</td><td style="text-align:left;">帧率（每秒传输帧数）</td></tr></tbody></table><h2 id="_1、相关技术背景-背景技术-与本发明最相近似的现有实现方案-现有技术" tabindex="-1">1、相关技术背景（背景技术），与本发明最相近似的现有实现方案（现有技术） <a class="header-anchor" href="#_1、相关技术背景-背景技术-与本发明最相近似的现有实现方案-现有技术" aria-label="Permalink to &quot;1、相关技术背景（背景技术），与本发明最相近似的现有实现方案（现有技术）&quot;">​</a></h2><p>现代多媒体资源日益复杂，视频播 放器播放视频资源最终呈现的效果存在各种差异，FPS是一项重要指标，若播放视频资源时FPS异常，用户可以直接的感受到。比如通过播放器播放一个50FPS的视频资源，通过显示器呈现出来只有40FPS，每秒存在10帧的差距，那么用户在观感上能察觉到视频播放卡顿、不连贯。</p><p>本专利主要测试对象是针对视频播放器，测试视频资源通过播放器播放，是否达到视频资源预期FPS的新测试技术。</p><p>目前行业内有多种测试方法：</p><ol><li><p>主观法：用户视觉，使用肉眼观察。这种方法只能测试出偏差较大的情况，精准度较低。</p></li><li><p>专用设备：市面上有一些针对此场景的专用测试设备，比如&quot;秒发生器&quot;，该设备可以通过配套的摄像机检测出播放视频的FPS，且精准度有一定保证。</p></li><li><p>设备辅助与计算：通过高速相机（每秒可捕捉1000-10000帧）录制视频，通过一定的算法得出播放视频的FPS。</p></li></ol><h3 id="_1-1、与本发明相关的现有技术一" tabindex="-1">1.1、与本发明相关的现有技术一 <a class="header-anchor" href="#_1-1、与本发明相关的现有技术一" aria-label="Permalink to &quot;1.1、与本发明相关的现有技术一&quot;">​</a></h3><h4 id="_1-1-1、现有技术一的技术方案" tabindex="-1">1.1.1、现有技术一的技术方案 <a class="header-anchor" href="#_1-1-1、现有技术一的技术方案" aria-label="Permalink to &quot;1.1.1、现有技术一的技术方案&quot;">​</a></h4><p>通过主观法来进行测试，只需要通过被测播放器播放不同的视频，通过肉眼进行观测，在播放过程中是否流程，是否出现卡顿、画面不连贯等问题。该方法测试起来全靠测试人员的经验，测试效率较高。</p><h4 id="_1-1-2、现有技术一的缺点" tabindex="-1">1.1.2、现有技术一的缺点 <a class="header-anchor" href="#_1-1-2、现有技术一的缺点" aria-label="Permalink to &quot;1.1.2、现有技术一的缺点&quot;">​</a></h4><p>使用方案一进行测试，适用于精度要求不高的测试场景，比如只需要保证播放功能可用，播放视频流畅即可。但是需要获得具体测试数据，做更近一步的分析时，该方法则无法满足。</p><h3 id="_1-2、与本发明相关的现有技术二" tabindex="-1">1.2、与本发明相关的现有技术二 <a class="header-anchor" href="#_1-2、与本发明相关的现有技术二" aria-label="Permalink to &quot;1.2、与本发明相关的现有技术二&quot;">​</a></h3><h4 id="_1-2-1、现有技术二的技术方案" tabindex="-1">1.2.1、现有技术二的技术方案 <a class="header-anchor" href="#_1-2-1、现有技术二的技术方案" aria-label="Permalink to &quot;1.2.1、现有技术二的技术方案&quot;">​</a></h4><p>使用针对该场景生产的专用设备来进行测试，例如&quot;秒发生器&quot;，设备分为两部分：图像工作站、专用摄像头。</p><p>原理是通过被测播放器播放视频资源，然后使用设备开始录制视频，录制时间需要大于等于120秒；通过图形工作站软件对视频录像进行单帧回放，前后两帧图片显示秒发生器中LED位置有差异即记为一帧，回放时间应大于等于120s；随机选取一段20s时长的视频录像，设备内部会自动计算出20s内包含的图像帧数值N,按以下公式计算出帧率数值：</p><h4 id="_1-2-2、现有技术二的缺点" tabindex="-1">1.2.2、现有技术二的缺点 <a class="header-anchor" href="#_1-2-2、现有技术二的缺点" aria-label="Permalink to &quot;1.2.2、现有技术二的缺点&quot;">​</a></h4><p>通过专用设备进行测试得出的数值精度较高，缺点也很明显，就是是对设备很依赖，如果需要到其他地点进行测试，则携带起来较为不便；甚至如果设备故障，又急需测试时，还会耽误测试进度；除此之外若视频时长小于120s则不可测试，当然采购设备也是一笔不小的开销。</p><h3 id="_1-3、与本发明相关的现有技术三" tabindex="-1">1.3、与本发明相关的现有技术三 <a class="header-anchor" href="#_1-3、与本发明相关的现有技术三" aria-label="Permalink to &quot;1.3、与本发明相关的现有技术三&quot;">​</a></h3><h4 id="_1-3-1、现有技术三的技术方案" tabindex="-1">1.3.1、现有技术三的技术方案 <a class="header-anchor" href="#_1-3-1、现有技术三的技术方案" aria-label="Permalink to &quot;1.3.1、现有技术三的技术方案&quot;">​</a></h4><p>设备辅助与计算的方法，其实是一种半手工测试方法，同样需要依赖设备&quot;高速相机&quot;。原理是通过被测播放器播放视频资源，然后使用高速相机对整个播放视频进行录制，因为高速相机的特点，可以捕获到播放视频中每一帧的变化。视频录制结束后需要获取几个值：</p><ol><li><p>总帧数：录制视频中所有帧数量</p></li><li><p>总掉帧数：录制视频中所有重复帧数量</p></li><li><p>每秒总帧数：录制视频中某一秒时间内所有帧数量</p></li></ol><p>取得以上数值后根据以下公式进行运算，获得&quot;掉帧率&quot;从而计算出&quot;帧率值（FPS）&quot;：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>掉帧率 = 总掉帧数/总帧数*100%</span></span>
<span class="line"><span>帧率=每秒总帧数*（1-掉帧率）</span></span></code></pre></div><h4 id="_1-3-2、现有技术三的缺点" tabindex="-1">1.3.2、现有技术三的缺点 <a class="header-anchor" href="#_1-3-2、现有技术三的缺点" aria-label="Permalink to &quot;1.3.2、现有技术三的缺点&quot;">​</a></h4><p>通过该方案计算的的帧率相对于技术一更为精准的多，和方案二不相上下。因为都是通过比例值运算得出的数值，最终结论都是平均FPS，但是针对视频某一段、某一秒时任然会存在差异。除此之外，因为依赖高速相机，所以同样会面临技术二所面临的问题。</p><h2 id="_2、本发明技术方案的详细阐述" tabindex="-1">2、本发明技术方案的详细阐述 <a class="header-anchor" href="#_2、本发明技术方案的详细阐述" aria-label="Permalink to &quot;2、本发明技术方案的详细阐述&quot;">​</a></h2><h3 id="_2-1、本发明所要解决的技术问题" tabindex="-1">2.1、本发明所要解决的技术问题 <a class="header-anchor" href="#_2-1、本发明所要解决的技术问题" aria-label="Permalink to &quot;2.1、本发明所要解决的技术问题&quot;">​</a></h3><p>本发明主要解决以下技术问题：</p><ol><li><p>针对现有技术方案，提升其测试结果精准度</p></li><li><p>不依赖外部设备，适用性与易用性高</p></li></ol><h3 id="_2-2、本发明提供的完整技术方案" tabindex="-1">2.2、本发明提供的完整技术方案 <a class="header-anchor" href="#_2-2、本发明提供的完整技术方案" aria-label="Permalink to &quot;2.2、本发明提供的完整技术方案&quot;">​</a></h3><p>为了解决上述技术问题，本发明提供了一种帧率测试方法，能提高测试的准确性和通用性，具体的流程如下：</p><p><img src="`+i+'" alt=""></p><blockquote><p>图1：测试方案流程图</p></blockquote><p><strong>准备工作：</strong></p><ol><li><p>视频资源：例如30FPS视频、45FPS视频...</p></li><li><p>录制工具：能调节录制视频FPS即可</p></li><li><p>计时工具：毫秒级即可</p></li><li><p>视频分解工具：此处使用了1个自研测试辅助工具（PerfTools）实现</p><p>以上工具市面上满足要求的很多，就不多做介绍了，这里也说明了该方案的通用性，无需使用一些造价不菲的外部设备。</p><p><strong>方案设计流程：</strong></p></li><li><p>确认即将播放的视频资源FPS，启动录制工具，此时需要注意的是设置录制FPS值，必须高于视频资源FPS，才能确保完整捕获到视频资源的每一帧。</p></li><li><p>启动毫秒级计时工具，此处加入该设计有两个目的（后面会细说）：</p></li></ol><p>(1) 协助判断重复帧</p><p>(2) 协助计算帧率</p><ol start="3"><li><p>被测播放器开始播放视频资源，与此同时计时器与录制工具运行中。</p></li><li><p>视频播放完毕，关闭播放器/计时器，结束录制并导出视频。</p></li><li><p>使用PerfTools工具对视频进行分解处理，工具可以把视频分解成图像帧，并且支持设置把每一秒分解成N帧，需要注意的是数值N必须大于视频资源FPS，最佳情况下，数值N=视频资源FPS*2，比如50FPS的视频资源，每秒分解100帧，这样才能确保不会丢失细节并且不会对后期的数据处理造成太大负担。</p></li><li><p>根据视频播放总时长把视频分为前、中、后三期。</p></li><li><p>在视频前期，获取1秒内所有图像帧，隔离保存。获取方法是利用每一帧图像中的计时器时间，定位首帧、尾帧，然后把包含首帧与尾帧范围内的所有图像帧隔离备用，确认首、尾帧方法如下：</p></li></ol><p>(1) 确保该图像帧与上一帧有变化，即可被定义为首帧，并记录计时器时间。</p><p>(2) 使用首帧计时器时间，后推1000ms为尾帧，需要注意的是毫秒级的精度太高，并不一定能必然出现完全匹配的1000ms，取最接近的值即可，比如：989ms、998ms...均可。</p><p><img src="'+o+'" alt=""></p><blockquote><p>图2：首帧、尾帧实例</p></blockquote><ol start="8"><li><p>使用同样的办法，在视频中、后期获取对应的1秒图像帧。</p></li><li><p>依次处理每一组数据重复帧，直接剔除，需要注意的是：</p></li></ol><p>(1) 重复帧的定义：完全相同的图像帧。这里需要注意的是细节变化，只要存在：光线明/暗变化、局部模糊/清晰变化等等类似场景都不算是完全相同。</p><p>(2) 帧间隔计算公式：</p><p>(3) 计时器辅助去重：</p><p>a. 若相邻图像帧计时器时间相同，直接判断为重复帧</p><p>b. 若相邻图像帧计时器时间不相同，图像画面又没有明显差异，则可以通过计时器辅助判断：例如50FPS的视频资源，根据上述公式可计算出帧间隔为20ms。如果遇到光线杂乱不好分辨是否相同的图片，可以查看这2张图像帧计时器差异是否小于20ms，如果小于20ms则可以直接判断为重复帧。</p><p><img src="'+r+'" alt=""></p><blockquote><p>图3：重复帧处理流程</p></blockquote><ol start="10"><li><p>之前有解释：，所以去重后得出剩余图像帧数量则为当前视频片段帧率。</p></li><li><p>按照同样的方法得出视频中期、后期帧率，这样就计算出了视频前、中、后期视频片段帧率，该片段选取只是举例，可增加测试片段。</p></li><li><p>平均帧率可通过公式计算：</p></li></ol><p>综上，通过以上测试方法，成功计算出了视频片段的实时帧率与平均帧率，可以从两个维度对测试结果进行分析：平均FPS是否达标、所有片段FPS是否平稳，至此整个流程完毕。</p><p><img src="'+s+'" alt=""></p><blockquote><p>图4：测试结果实例</p></blockquote><p>2.3、本发明技术方案带来的有益效果</p><p>通过本发明测试方法&quot;方案设计流程&quot;中步骤7-10，可求出视频片段的实时FPS，因为FPS最小单位就是秒，所以这里比通过平均值求出的FPS精准度更高，同时可以根据视频播放过程中各个阶段的实时FPS，测试播放器播放视频的稳定性。</p><p>除此之外该测试方法合理组合运用了各通用性软件，达到测试目的，无需再配套外部设备，解决了测试过程过于依赖外部设备的问题，更具备通用性，并且降低了测试成本。</p><p>2.4、针对上述技术方案，是否还有替代方案同样能完成发明目的</p><p>暂无</p><p>3、本发明的技术关键点和欲保护点是什么</p><p>本发明的技术关键点包括测试辅助工具的组合设计、测试方法（&quot;方案设计流程&quot;步骤1-12）的设计与实现。</p><p>4、附件</p><p>参考文献</p><ul><li><p>FPS定义，<a href="https://baike.baidu.com/item/FPS/3227416?fr=aladdin" target="_blank" rel="noreferrer">https://baike.baidu.com/item/FPS/3227416?fr=aladdin</a></p></li><li><p>帧定义，<a href="https://baike.baidu.com/item/%E5%B8%A7/460387" target="_blank" rel="noreferrer">https://baike.baidu.com/item/帧/460387</a></p></li><li><p>视频定义，<a href="https://baike.baidu.com/item/%E8%A7%86%E9%A2%91" target="_blank" rel="noreferrer">https://baike.baidu.com/item/视频</a></p></li></ul>',66)]))}const P=t(E,[["render",n]]);export{b as __pageData,P as default};
