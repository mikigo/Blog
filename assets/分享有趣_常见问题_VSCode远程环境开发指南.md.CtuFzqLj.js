import{_ as o,c as s,R as e,o as r}from"./chunks/framework.DEC0wfly.js";const a="/assets/%E5%95%86%E5%BA%97%E4%B8%8B%E8%BD%BD.CxjMV0VY.png",n="/assets/%E4%B8%AD%E6%96%87%E6%8F%92%E4%BB%B6.MQvevh43.png",p="/assets/%E9%87%8D%E5%90%AF.BXv7fK_b.png",d="/assets/remote-ssh%E4%B8%8B%E8%BD%BD.DGBoJ00b.png",c="/assets/remot-ssh-config.Cnfuck1G.png",i="/assets/config-info.BeE1o5RB.png",l="/assets/AgentForwarding.C41PIExp.png",h="/assets/ssh-keygen.Bf4XEfB4.png",g="/assets/ssh-copy-id.CxdjNj28.png",m="/assets/Perminrootlogin.i8GP8I8s.png",_="/assets/allowtcp.2KDTTI-L.png",f="/assets/ssh-connect.IdDeKTzH.png",u="/assets/deploy.Op3VPrBK.png",b="/assets/open-floder.7WteLLk5.png",P="/assets/python%E6%8F%92%E4%BB%B6.DpNT9jNL.png",B="/assets/black%E6%8F%92%E4%BB%B6.D1B3WMUF.png",V=JSON.parse('{"title":"VSCode远程环境开发指南","description":"","frontmatter":{"Author":"wangpeng"},"headers":[],"relativePath":"分享有趣/常见问题/VSCode远程环境开发指南.md","filePath":"分享有趣/常见问题/VSCode远程环境开发指南.md","lastUpdated":1736789141000}'),y={name:"分享有趣/常见问题/VSCode远程环境开发指南.md"};function E(S,t,k,q,C,v){return r(),s("div",null,t[0]||(t[0]=[e('<h1 id="vscode远程环境开发指南" tabindex="-1">VSCode远程环境开发指南 <a class="header-anchor" href="#vscode远程环境开发指南" aria-label="Permalink to &quot;VSCode远程环境开发指南&quot;">​</a></h1><h2 id="_1-为什么要远程开发" tabindex="-1">1.为什么要远程开发 <a class="header-anchor" href="#_1-为什么要远程开发" aria-label="Permalink to &quot;1.为什么要远程开发&quot;">​</a></h2><p>办公电脑常常会因安装各种包和部署开发环境而变得混乱，导致项目开发中出现各种问题，重新安装环境并不现实。因此，许多开发者选择将开发环境与办公环境分离，通过远程连接开发环境来编码，确保办公电脑的整洁和高效。</p><h2 id="_2-为什么选择vscode" tabindex="-1">2.为什么选择vscode <a class="header-anchor" href="#_2-为什么选择vscode" aria-label="Permalink to &quot;2.为什么选择vscode&quot;">​</a></h2><p>测试部主要使用 Python 和 Shell 进行开发。在众多 IDE 中，PyCharm 和 VSCode 是不可避免的选择，两者的对比如下：</p><table><thead><tr><th><strong>对比项</strong></th><th><strong>启动速度</strong></th><th><strong>功能集成</strong></th><th><strong>Python 支持</strong></th><th><strong>扩展定制</strong></th></tr></thead><tbody><tr><td><strong>VSCode</strong></td><td><strong>轻量、启动快，占用资源少</strong></td><td><strong>核心功能简洁，大多数功能依赖插件支持</strong></td><td><strong>需安装 Python 扩展和调试插件</strong></td><td><strong>丰富插件市场，可灵活定制</strong></td></tr><tr><td><strong>PyCharm</strong></td><td><strong>启动慢，占用资源多</strong></td><td><strong>开箱即用的高级功能</strong></td><td><strong>原生支持 Python，专为 Python 开发设计</strong></td><td><strong>定制性较少，不够灵活</strong></td></tr></tbody></table><p><strong>关键原因：VSCode 完全免费，而 PyCharm 的远程开发功能需要专业版，且专业版是收费的。</strong></p><h2 id="_3-配置步骤" tabindex="-1">3.配置步骤 <a class="header-anchor" href="#_3-配置步骤" aria-label="Permalink to &quot;3.配置步骤&quot;">​</a></h2><h3 id="_1-下载安装" tabindex="-1">1）下载安装 <a class="header-anchor" href="#_1-下载安装" aria-label="Permalink to &quot;1）下载安装&quot;">​</a></h3><ul><li><strong>从应用商店下载</strong></li></ul><p><img src="'+a+'" alt="商店下载"></p><ul><li><strong>官网下载：</strong><a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer">点我跳转</a></li></ul><h3 id="_2-插件下载" tabindex="-1">2）插件下载 <a class="header-anchor" href="#_2-插件下载" aria-label="Permalink to &quot;2）插件下载&quot;">​</a></h3><p>第一步：安装简体中文插件</p><p><img src="'+n+'" alt="中文插件"></p><p>第二步：安装完成后点击右下角重启vscode</p><p><img src="'+p+'" alt="重启"></p><p>第三步：安装remote-ssh插件</p><p>插件市场搜索<code>remote-ssh</code>，点击安装</p><p><img src="'+d+'" alt="remote-ssh"></p><h3 id="_3-vscode配置" tabindex="-1">3）VSCode配置 <a class="header-anchor" href="#_3-vscode配置" aria-label="Permalink to &quot;3）VSCode配置&quot;">​</a></h3><p>第一步：<code>ctrl+shift+p</code>调出命令框，输入<code>remote-ssh:config</code></p><p><img src="'+c+'" alt="remote-ssh-config"></p><p>第二步：配置远程环境信息</p><p><img src="'+i+'" alt="config-info"></p><p>第三步：<code>ctrl+shift+p</code>调出命令框，输入<code>Remote-SSH:Settings</code>，<strong>把</strong><code>Remote.SSH：Enable Agent Forwarding</code>的勾选去掉</p><p><img src="'+l+'" alt="AgentForwarding"></p><h3 id="_4-免密配置" tabindex="-1">4）免密配置 <a class="header-anchor" href="#_4-免密配置" aria-label="Permalink to &quot;4）免密配置&quot;">​</a></h3><p>第一步：打开终端输入<code>ssh-keygen</code>，连续回车生成密钥</p><p><img src="'+h+'" alt="ssh-keygen"></p><p>第二步：配置远程免密：</p><p><img src="'+g+'" alt="ssh-copy-id"></p><h3 id="_4-远程机器配置" tabindex="-1">4）远程机器配置 <a class="header-anchor" href="#_4-远程机器配置" aria-label="Permalink to &quot;4）远程机器配置&quot;">​</a></h3><p>第一步：安装<code>openssh-server</code>，专业版安装命令<code>sudo apt-get install openssh-server</code>，服务器版安装命令<code>yum install openssh-server</code>，安装完成后打开<code>/etc/ssh/sshd_config</code>，做如下修改</p><p>将<code>PermitRootLogin</code>前的注释去掉，同时将后面字段改为yes</p><p><img src="'+m+'" alt="Perminrootlogin"></p><p>将<code>AllowTcpForwarding </code>前的注释去掉，同时将后面字段改为yes</p><p><img src="'+_+'" alt="allowtcp"></p><p>第二步：重启服务</p><p><code>systemctl restart sshd</code></p><h2 id="_4-连接远程" tabindex="-1">4.连接远程 <a class="header-anchor" href="#_4-连接远程" aria-label="Permalink to &quot;4.连接远程&quot;">​</a></h2><p>大功即将告成，重启vscode后，点击左侧边电脑图标，然后点击已配置的远程机器，开始链接~~~</p><p><img src="'+f+'" alt="ssh-connect"></p><p>会发现右下角开始链接远程并开始相关配置提示</p><p><img src="'+u+'" alt="deploy"></p><p>进度条读完后，点击左侧边栏文件图标，即可打开远程项目进行开发啦！！</p><p><img src="'+b+'" alt="open-floder"></p><h2 id="_5-推荐插件" tabindex="-1">5.推荐插件 <a class="header-anchor" href="#_5-推荐插件" aria-label="Permalink to &quot;5.推荐插件&quot;">​</a></h2><p>Python插件：Microsoft 提供的 Python 扩展，提供了强大的 Python 支持，包括代码补全、Linting、格式化等功能</p><p><img src="'+P+'" alt="python插件"></p><p>black formatter：Python 代码格式化工具，能够自动格式化代码以符合 PEP 8 标准，使代码保持一致的风格</p><p>格式化快捷键：</p><ul><li><strong>Windows/Linux</strong>‌: <code>Ctrl + Shift + I</code></li><li><strong>macOS</strong>‌: <code>Cmd + Shift + F</code></li></ul><p><img src="'+B+'" alt="black插件"></p>',54)]))}const D=o(y,[["render",E]]);export{V as __pageData,D as default};
