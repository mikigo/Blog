import{_ as i,c as a,R as n,o as l}from"./chunks/framework.CuFLN7ac.js";const g=JSON.parse('{"title":"智能化性能测试","description":"","frontmatter":{},"headers":[],"relativePath":"编程基础/人工智能/智能化性能测试.md","filePath":"编程基础/人工智能/智能化性能测试.md","lastUpdated":1736790406000}'),t={name:"编程基础/人工智能/智能化性能测试.md"};function p(h,s,k,e,d,r){return l(),a("div",null,s[0]||(s[0]=[n(`<h1 id="智能化性能测试" tabindex="-1">智能化性能测试 <a class="header-anchor" href="#智能化性能测试" aria-label="Permalink to &quot;智能化性能测试&quot;">​</a></h1><p><img src="https://pic.imgdb.cn/item/64f054c7661c6c8e54ff4be0.png" alt=""></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># =============================================</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Attribution ：Chengdu Test Team</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Time        : 2023/1/3</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># =============================================</span></span></code></pre></div><h2 id="一、简述" tabindex="-1">一、简述 <a class="header-anchor" href="#一、简述" aria-label="Permalink to &quot;一、简述&quot;">​</a></h2><p>智能化性能测试</p><p>通过自动化手段对应用进行性能测试，提供方便的环境部署、运行配置、用例编写等，用于桌面应用的冷热启动、资源拷贝、页面跳转等性能场景测试。</p><p>仓库地址：<a href="https://gerrit.uniontech.com/admin/repos/autotest-perf-aitest" target="_blank" rel="noreferrer">https://gerrit.uniontech.com/admin/repos/autotest-perf-aitest</a></p><h2 id="二、代码结构" tabindex="-1">二、代码结构 <a class="header-anchor" href="#二、代码结构" aria-label="Permalink to &quot;二、代码结构&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">autotest-perf-aitest</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apps</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">					# 存放所有应用性能测试脚本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> conftest.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">				# pytest hook相关方法</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CURRENT</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">					# 版本内容</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">					# 文档</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 键值对照表.pdf</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		 # 串口线code与按键的对照</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 性能自动化测试脚本执行器使用指南.md</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		# 执行器脚本使用指南</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> USB串口转USB键盘鼠标线协议文件V1.0.pdf</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		# 串口协议</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xserver-xorg-input-libinput-0.28.2.zip</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# Linux下绝对坐标操作依赖的源码，可根据架构打包</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 功能主入口</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pytest.ini</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# pytst 配置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> README.md</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> setting</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		# 设置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> client.ini</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 测试机 IP 设置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 全局配置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev_env.sh</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 宿主机环境部署脚本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-compose_no_relay.yml</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 无继电器容器集群</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-compose.yml</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		# 有继电器容器集群</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker_login.sh</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		# docker 登陆</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> __init__.py</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> res</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> │  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> black.png</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		# 全黑图片，用于修改壁纸</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> │  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xserver-xorg-input-libinput_0.28.2-2_5000.deb</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		# 3A5000 架构鼠标绝对坐标依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> │  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xserver-xorg-input-libinput_0.28.2-2_amd64.deb</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		# amd 架构鼠标绝对坐标依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> │  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xserver-xorg-input-libinput_0.28.2-2_arm64.deb</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		# arm 架构鼠标绝对坐标依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> │  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xserver-xorg-input-libinput_0.28.2-2_mips64.deb</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		# mips 架构鼠标绝对坐标依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> │  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xserver-xorg-input-libinput_0.28.2-2_sw_64.deb</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		# sw 架构鼠标绝对坐标依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server.ini</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		# 服务器配置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> setup.sh</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		# 容器环境部署脚本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> template</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		# 创建 app 基础脚本模板</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> │  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app_template</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> │  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     ├──</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${app_name}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">_widget.py-tpl</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> │  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> control-tpl</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> │  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> images</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> │  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     │  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> readme</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> │  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> __init__.py-tpl</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> │  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${app_name}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">_01_scene.json-tpl</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> │  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${app_name}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">_01_scene.py-tpl</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uos_docker</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		# 容器环境配置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dockerfile</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requirements.txt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">└──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> analysis_save.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 解析图片流结果，汇总生成 excel 报告</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> base_widget.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		# 封装的基础操作，应用调用的主入口方法</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cmdctl.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">			# 调用命令行使用</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> global_value.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		# 全局变量</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> image_utils.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		# 图片相关方法</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> __init__.py</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> logger_utils.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		# 日志配置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pdocr.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">			# ocr 配置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> public_method.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 一些方便的封住</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> record.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">			# 录屏相关</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rtk</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">					# 运行相关</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    │  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> _base.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		# 一些枚举</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    │  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> __init__.py</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    │  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install_env.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 安装环境</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    │  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> local_runner.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 运行用例</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> serial_communication</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 串口相关</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    │  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> __init__.py</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    │  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> power_control.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 继电器操作，使用继电器连接主机电源，控制开关机</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    │  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> serial_common.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 串口公共方法</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    │  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> usb_mk.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">			# 键鼠操作基础封装</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shortcut_key.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">			# 快捷键的封装</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> singleton.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">			# 单例模式</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start_app.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">			# 创建 app</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> write_xlsx.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">			# 生成 excel</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># __init__.py 文件为标识该目录是一个Python的模块包，项目中的__init__.py均为空文件。</span></span></code></pre></div><h2 id="三、环境搭建" tabindex="-1">三、环境搭建 <a class="header-anchor" href="#三、环境搭建" aria-label="Permalink to &quot;三、环境搭建&quot;">​</a></h2><h3 id="_1、硬件环境" tabindex="-1">1、硬件环境 <a class="header-anchor" href="#_1、硬件环境" aria-label="Permalink to &quot;1、硬件环境&quot;">​</a></h3><h4 id="_1-设备清单" tabindex="-1">（1）设备清单 <a class="header-anchor" href="#_1-设备清单" aria-label="Permalink to &quot;（1）设备清单&quot;">​</a></h4><ul><li>测试机至少一台。</li><li>服务端一台。（仅支持 <code>AMD</code> 架构，若需其他架构，咨询相关开发人员）</li><li>采集盒一个。 （<code>ACASIS</code> <code>HDMI</code> 视频采集盒，<a href="https://item.jd.com/100013302599.html#crumb-wrap" target="_blank" rel="noreferrer">https://item.jd.com/100013302599.html#crumb-wrap</a> ）</li><li>USB串口转USB键鼠协议线。（优胜电子科技USB串口转USB键鼠协议线B类，<a href="https://item.taobao.com/item.htm?spm=a1z10.3-c.w4002-1385258877.57.7ea037891D6nKh&amp;id=611894882981" target="_blank" rel="noreferrer">https://item.taobao.com/item.htm?spm=a1z10.3-c.w4002-1385258877.57.7ea037891D6nKh&amp;id=611894882981</a> ）</li></ul><h4 id="_2-硬件环境搭建" tabindex="-1">（2）硬件环境搭建 <a class="header-anchor" href="#_2-硬件环境搭建" aria-label="Permalink to &quot;（2）硬件环境搭建&quot;">​</a></h4><ul><li>采集盒，<code>HDMI</code> 端连接测试机， <code>USB</code> 端连接到服务器上。</li><li><code>USB</code> 串口线，白色端连接服务器，黑色端连接测试机（<code>USB3.0</code> 接口上）。</li><li>如果需要可以接 <code>USB</code> 延长线。</li><li>测试机上可以不接显示器。</li></ul><h4 id="_3-服务端推荐配置" tabindex="-1">（3）服务端推荐配置 <a class="header-anchor" href="#_3-服务端推荐配置" aria-label="Permalink to &quot;（3）服务端推荐配置&quot;">​</a></h4><p>配置越高，解析速度越快。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">处理器:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Intel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">R</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Core</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">i3-10100</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CPU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3.60</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">GHz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (四核 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 八逻辑处理器</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">主板:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> B460-N2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">J</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">内存:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">GB</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TF32D4U2S1MEH-8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DDR4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3200</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">MHz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0.3ns))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">显示适配器:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> UHD</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Graphics</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 630</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">存储设备:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FORESEE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> P900F256GBH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (256 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">GB</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)/ST1000DM003-1SB102 (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1.00</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TB</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="_2、测试机环境搭建" tabindex="-1">2、测试机环境搭建 <a class="header-anchor" href="#_2、测试机环境搭建" aria-label="Permalink to &quot;2、测试机环境搭建&quot;">​</a></h3><ul><li><p>打开控制中心，账户设置为【自动登录】和【无密码登录】，电源管理中使用电源全部设置为【从不】，开启开发者模式。</p></li><li><p>根据应用性能测试要求，导入相关测试资源，比如：导入相册、影院、音乐的测试资源。</p></li><li><p>在服务端打开相机应用后，将测试机桌面壁纸更换为纯色壁纸（注意，服务端需提前开启相机后再设置测试机壁纸，建议纯黑壁纸 <code>setting/res/black.png</code>）</p></li><li><p>在文件管理器中，将选项 主菜单-设置-预览-图片预览 取消勾选（如不取消，会影响截图录屏应用的性能数据）</p></li><li><p>移动或删除系统 Logo ，排除桌面右下角 Logo 的影响（重启生效）。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/share/deepin/uos_logo.svg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/Pictures/</span></span></code></pre></div></li><li><p>安装鼠标绝对坐标操作依赖（必须安装！！）</p><ul><li><p><code>AMD</code> 安装 <code>setting/res </code> 目录下 <code>xserver-xorg-input-libinput_0.28.2-2_amd64.deb</code></p></li><li><p><code>ARM</code> 安装 <code>setting/res </code> 目录下 <code>xserver-xorg-input-libinput_0.28.2-2_arm64.deb</code></p></li><li><p><code>MIPS</code> 安装 setting/<code>res </code> 目录下 <code>xserver-xorg-input-libinput_0.28.2-2_mips64.deb</code></p></li><li><p><code>3A5000</code> 安装 <code>setting/res </code> 目录下 <code>xserver-xorg-input-libinput_0.28.2-2_5000.deb</code></p></li><li><p>安装命令</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dkpg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xserver-xorg-input-libinput_0.28.2-2_amd64.deb</span></span></code></pre></div></li></ul><p>安装时会提示已存在相同版本，请忽略，直接覆盖安装，安装完成后，必须重启主机才生效</p></li></ul><h3 id="_3、服务端一键环境部署" tabindex="-1">3、服务端一键环境部署 <a class="header-anchor" href="#_3、服务端一键环境部署" aria-label="Permalink to &quot;3、服务端一键环境部署&quot;">​</a></h3><p>环境搭建前必须先连接上 <code>USB</code> 串口线和采集盒。</p><p>宿主机环境安装</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> host</span></span></code></pre></div><p>容器环境安装</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span></span></code></pre></div><h2 id="四、配置项" tabindex="-1">四、配置项 <a class="header-anchor" href="#四、配置项" aria-label="Permalink to &quot;四、配置项&quot;">​</a></h2><h3 id="_1、服务端配置" tabindex="-1">1、服务端配置 <a class="header-anchor" href="#_1、服务端配置" aria-label="Permalink to &quot;1、服务端配置&quot;">​</a></h3><p><code>setting/config/server.ini</code></p><p>用于配置测试过程中的一些配置项，包含了所有服务端所有的可配置项。</p><ul><li><strong>本地无网络运行</strong><ul><li>将配置项 <code>network=0</code> 即可开始测试。</li></ul></li><li><strong>本地有网络运行</strong><ul><li>配置项 <code>network=1</code></li><li>(1)配置项 <code>client_alias=</code> 配置为你要测试的测试机别名，如 <code>Alias1</code> 测试机别名在 <code>setting/config/client.ini</code> 中进行配置，此时，直接运行 <code>python3 manager</code> 即可开始测试。</li><li>(2)配置项 <code>client_alias=</code> 为空，测试机别名在 <code>config/client.ini</code> 中进行配置，此时，直接运行 <code>python3 manager --client_alias Alias1</code>，即可开始测试。(<code>Alias1</code> 为你配置的测试机别名)</li><li>(1)和(2)只要使用其一即可。</li></ul></li><li><strong>有网络运行，且需要通过 <code>Jenkins</code> 上运行一个 <code>job</code> ，同时控制多台机器。</strong><ul><li>配置项 <code>network=1</code></li><li>配置项 <code>client_alias=</code> 不用配置，在运行 <code>run.sh</code> 的时候直接空格加别名即可，比如：测试机别名为 <code>Alias1</code> ，且已经在 <code>config/client.ini</code> 中配置了 <code>Alias1</code> 的<code>user</code> <code>ip</code> <code>password</code> ，则运行 <code>bash run.sh Alias1</code> 即可开始测试。</li><li>在 <code>Jenkins</code> <code>pipeline</code> 里面通过并行 <code>stage</code> 或并行调用下层任务的方式可以实现大规模的性能测试需求。</li></ul></li></ul><p><strong>详细配置项说明：</strong></p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">;=============================== CASE CONFIG ===================================</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[case]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">;执行的应用名称</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">;为空表示执行 apps/ 目录下所有应用的用例</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">APP_NAME</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">;执行包含关键词的用例</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">KEYWORDS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">;执行包含用例标签的用例</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TAGS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">;1、KEYWORDS 和 TAGS 都为空表示执行 APP_NAME 的所有用例</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">;2、KEYWORDS 和 TAGS 都支持逻辑组合，即 and/or/not 的表达式, e.g. TAGS = L1 or smoke</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[case_conf]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 尾帧识别的方式stage按阶段划分，ocr通过文案识别，match 图片匹配，ocr文案识别较慢，不推荐使用</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">find_by</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = stage</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 最后一个稳定阶段的帧数识别</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 首帧存在后的第一个大于该配置帧数的阶段的首帧作为性能尾帧</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">final_stable_num</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=100</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 从该帧数开始识别文案或图片，减少分析时间</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">start_num</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 150</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 识别的文案</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 识别图片</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">match</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=apps/xxx/images/match.png</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 识别相似度</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">match_rate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=0.9</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 用例操作执行之后，停止录屏之前的等待时间，单位秒</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 比如热启动用例，从点击打开到停止录屏，中间等待5秒；</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">duration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 15</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 单条用例执行的次数</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">count</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 5</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 稳定阶段划分的相似度</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">stable_similarity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 0.9997</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[server]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 调试模式=1，为开启调试模式，0为关闭。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 调试模式下默认只执行一次用例，不关机</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 编写用例的过程中建议开启maintain。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MAINTAIN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 0</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 运行的环境docker容器环境，host宿主机环境</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ENV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = docker</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 服务端密码</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PASSWORD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=1</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定测试机别名</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 测试机别名在 config/client.ini 中进行配置，比如：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># [AMD]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ip=10.8.15.86</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># user=uos</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 其中 AMD 为测试机别名，则client_alias=AMD</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CLIENT_ALIAS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = x86（Intel-i7）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1 开启网络, 0 关闭网络</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># （1）服务端与测试机须在同一网段下，你可以尝试在服务端通过ssh连接测试机，如果可以连接，说明网络正常。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># （2）当input_type=FILE_NAME 时，必须开启网络。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NETWORK</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 1</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 性能结果统计单位 毫秒—ms, 秒—s</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">UNIT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=ms</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 测试机开机进入桌面后等待时间,单位/秒</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">STARTUP_DELAY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 60</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1为删除缓存，0为不删除缓存</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 用例执行完后会在report目录下生成智能解析的一些缓存图片。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CACHE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 0</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 默认为空，报告会保存在项目下report目录中；</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定报告目录则存放到指定目录。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">REPORT_PATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = report</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 服务端从测试机获取的icon资源会缓存在项目下input目录中</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INPUT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = input/</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1为测试完关机，0为测试完不关机</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SHUTDOWN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 0</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 解析进程数（不推荐修改）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 3个进程解析视频已经能够满足，即使增加进程数也不能减少整体耗时</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 另外还要看CPU核数是否支持。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PARSING_PROCESS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 3</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1为使用继电器开关机，0为使用reboot命令重启。依赖继电器硬件设备，需要使用联系开发者</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RELAY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 0</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取测试应用的版本, %s 占位应用名</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果该配置为空，则不获取应用的版本信息。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">COMMAND</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = apt policy %s 2&gt;/dev/null|grep </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;已安装&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">|awk -F </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;：&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;{print \\$2}&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 关机等待开启时间，单位秒</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 根据测试机性能不同，开关机耗时可能不同，根据实际测试机情况配置。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SHUTDOWN_DELAY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 30</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 可用于图像识别的图片格式，以英文逗号隔开。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 该配置项不建议修改，目前我们仅验证了jpg,jpeg,png这三种常用的图片格式。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INPUT_TYPES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = jpg,jpeg,png</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 性能分析补帧，等于或低于该值的不稳定阶段视为稳定阶段，在最后计算性能结果时需要减掉。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">UN_STAB_START</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 3</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 服务端获取测试机图像的帧率，即每秒获取多少张测试机上的图像。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 默认帧率为30帧/秒，该配置项不建议修改，可能会对解析结果造成偏差。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FPS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 30</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 以下场景类型会重启测试机,多种场景使用逗号隔开</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SCENE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = cold</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">;OCR服务端地址（不可随意修改）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">OCR_SERVER_HOST</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = http://10.8.13.78:8890</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#屏幕图片临时存放位置</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SCREEN_CACHE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = /tmp/screen</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># =======================================</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[log]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 日志级别，OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 用例执行过程中的一些日志输出，log_cli=INFO表示 仅输出INFO及以上级别的日志。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">LOG_LEVEL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = DEBUG</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 日志文件保存路径</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">LOG_PATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">= logs</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># =======================================</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[dockerhub]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 容器登陆账号</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DOCKER_USER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = user</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 容器登陆密码</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DOCKER_PASSWORD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = User1234</span></span></code></pre></div><h3 id="_2、测试机配置" tabindex="-1">2、测试机配置 <a class="header-anchor" href="#_2、测试机配置" aria-label="Permalink to &quot;2、测试机配置&quot;">​</a></h3><p><code>setting/config/client.ini</code></p><p>用于配置测试机的信息。</p><ul><li><p>有网络的情况下，服务端需要动态获取测试机上的一些资源，因此你需要写入 <code>测试机别名</code> 、 <code>user</code> 、<code>ip</code>、 <code>password</code> 。</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 测试机别名</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Alias1]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 测试机ip</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=10.8.15.86 </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 测试机用户名</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=uos</span></span></code></pre></div><p>命名建议：<code>AliasA1</code>、<code>AliasA2</code>、<code>AliasB1</code>、<code>AliasB2</code>，不要重名。</p></li><li><p>无网络情况下，仅需要关注测试机分辨率配置项 <code>width=</code>、 <code>height=</code> 即可。</p></li></ul><p><strong>详细配置项说明：</strong></p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[client]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 默认测试机用户名，密码，ip</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 测试机密码</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 测试机主题</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=bloom</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 测试机icon目录</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=/usr/share/icons</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 系统desktop文件的存放目录，UOS系统默认为/usr/share/applications</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">desktop_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=/usr/share/applications</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 用于判断测试机是否开机进入桌面的识别标识。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1、通过桌面图标识别。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#   - type=FILE_NAME时，服务器和测试机必须在同一局域网内。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#   - power_on=dde-computer表示通过桌面计算机图标判断开机进入桌面。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2、通过本地图片作为开机识别。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#   - type= 传入为图片格式，type支持的类型包含在server.ini内配置项input_type=jpg,jpeg,png。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#   - power_on= 传入的是本地图片的路径。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=FILE_NAME</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">power_on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=dde-computer</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 测试机分辨率配置（测试机连接采集盒，采集盒的分辨率）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=1080</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=1920</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[AliasA1]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=10.8.15.86</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=uos</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># password=1 如果这里不写密码，默认取上面client里面的password</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[AliasA2]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=10.8.15.20</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=uos</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># password=1 如果这里不写密码，默认取上面client里面的password</span></span></code></pre></div><h3 id="_3、场景个性化配置" tabindex="-1">3、场景个性化配置 <a class="header-anchor" href="#_3、场景个性化配置" aria-label="Permalink to &quot;3、场景个性化配置&quot;">​</a></h3><p>随着测试场景的不断引入，发现现有服务端里的配置项并不适用于所有的性能场景，于是将服务端配置进行一个提取，可做单个场景的个性化配置，当然原来的服务端配置功能保留，只是当你配置了场景个性化配置后，优先使用个性化配置里面的内容，以下是对个性化配置的介绍。</p><p>目前每一个 py 文件对应一个性能测试场景，于是在同级目录下创建一个与之同名的 json 文件，作为个性化配置文件</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apps</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> album</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test_album_01_start.json</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 个性化配置文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test_album_01_start.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 性能场景文件</span></span></code></pre></div><p>以下是对 json 文件中配置的解释，若某项配置不需要，可以缺失，但不能为空；</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;title&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test_album_start&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,		</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> 标题；必须</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;app_name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;deepin-album&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,		</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> 场景所属的应用；必须</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;scene&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hot&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,					</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> 场景别名；必须</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;icon&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;deepin-album&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],			</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> 这条用例里面需要用到的所有icon，用例执行之前会从测试机上拷贝所有需要用的icon到服务端，用于图像识别。；可缺失</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">                                    #</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> 注意：列表中元素为应用desktop文件的文件名，相册的desktop文件名为deepin-album.desktop，</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">                                    #</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> 只需要写deepin-album即可，“.desktop”已经在底层做了拼接。</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;size&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {                         </span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> 图片对比的区域设置项，某些应用当前屏幕的部分区域需要将其去掉，可以设置此项，如果没有则可不写；可确实</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;x-coordinate&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,				</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> 左上角横坐标</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;y-coordinate&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,				</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> 左上角纵坐标</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;width&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">850</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,					</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> 横向长度</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;height&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1920</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">					#</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> 纵向高度</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;count&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,						</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> 场景执行的次数；必须</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;duration&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,					</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> 该条用例操作执行之后，停止录屏之前的等待时间，单位秒，针对于某些特定场景，该配置为可选项，覆盖</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> server.ini</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> 中的配置；可缺失</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;stable_similarity&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.9997</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,		</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> 性能场景分阶段时的图片相似度对比，前后图片低于该值，则分为不稳定阶段；可缺失</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;find_by&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;stage&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,               </span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> 尾帧识别的方式stage按阶段划分，ocr通过文案识别，match</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> 图片匹配</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;final_stable_num&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> 查找最后一个大于该值的稳定阶段的首帧作为性能的尾祯；可缺失</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;start_num&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">150</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;text&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,                       </span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> ocr识别的文案</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;match&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;apps/xxx/images/match.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> 图像匹配的图片文件路径</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;match_rate&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.9</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">                       #</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> 匹配相似度</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="五、测试流程" tabindex="-1">五、测试流程 <a class="header-anchor" href="#五、测试流程" aria-label="Permalink to &quot;五、测试流程&quot;">​</a></h2><p><img src="https://pic.imgdb.cn/item/64f054cb661c6c8e54ff5034.png" alt=""></p><h2 id="六、用例编写及方法参数指引" tabindex="-1">六、用例编写及方法参数指引 <a class="header-anchor" href="#六、用例编写及方法参数指引" aria-label="Permalink to &quot;六、用例编写及方法参数指引&quot;">​</a></h2><h3 id="_1、用例实例说明" tabindex="-1">1、用例实例说明 <a class="header-anchor" href="#_1、用例实例说明" aria-label="Permalink to &quot;1、用例实例说明&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 标准库导入</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> time </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sleep</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 导入三方库pytest</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pytest</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 导入用例执行要用到的Widget类</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> src.base_widget </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BaseWidget</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TestStart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # class级别的fixture，测试用例执行之前执行。autouse=True 自动在当前作用域下使用。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  @pytest.fixture</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">scope</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;class&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">autouse</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 测试热启动之前需要预启动。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> application_pre_start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self):</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 入参规则在第2点中详细描述。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    BaseWidget().right_click_element(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;deepin-album&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 入参规则在第2点中详细描述。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    BaseWidget().click_element(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;apps/autotest_deepin_album/picture/open.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">input_type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sleep(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 快捷键关闭窗口</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    BaseWidget().hot_key(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;alt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;f4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sleep(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 默认为function级别的fixture，用例执行之前，class级别fixture执行之后执行。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  @pytest.fixture</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">autouse</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup_start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self):</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 右键点击 deepin-album 图标</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    BaseWidget().right_click_element(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;deepin-album&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 移动到右键菜单中打开（open.png）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 入参规则在第2点中详细描述。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    BaseWidget().move_to(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">BaseWidget().find_element(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;apps/autotest_deepin_album/picture/open.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">input_type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 等待移动完成</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sleep(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> test_album_start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self):</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 点击“打开”</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    BaseWidget().click()</span></span></code></pre></div><h3 id="_2、方法参数说明" tabindex="-1">2、方法参数说明 <a class="header-anchor" href="#_2、方法参数说明" aria-label="Permalink to &quot;2、方法参数说明&quot;">​</a></h3><p>2.1、<strong><code>find_element</code> 方法</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> find_element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(element: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, input_type: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;FILE_NAME&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fill_color_position: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tuple</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), size: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tuple</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">70</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    pass</span></span></code></pre></div><ul><li><p><strong>参数 <code>element</code> 和 <code>input_type</code></strong></p><p><strong>（1）通过应用 <code>icon</code> 识别元素</strong></p><ul><li><code>input_type</code> 参数为默认参数，默认值为 <code>FIEL_NAME</code> ，表示通过应用 <code>icon</code> 寻找元素，此方法会动态获取测试机上的应用 <code>icon</code> 图标。</li><li>举例：默认情况下 <code>input_type </code> 参数不需要传入， <code>find_element(&quot;deepin-album&quot;)</code>，表示通过 <code>deepin-album</code> 的应用 <code>icon</code> 来获取坐标，注意，此时传入的 <code>deepin-album</code> 参数实际是 <code>desktop</code>文件的文件名，和2.3中的 <code>icon</code> 变量一致。</li><li>我们建议优先使用这种方法，但此方法依赖网络，请根据测试环境实际情况选择。</li></ul><p><strong>（2）通过本地图片识别元素</strong></p><ul><li>参数 <code>input_type</code> 传入图片格式，比如截取的本地图片格式为 <code>png</code>，那么 <code>input_type=&quot;png&quot;</code>，此时参数 <code>element </code> 传入图片的路径，建议存放在对应的产品 <code>apps/app/picture/</code> 目录下，路径为项目根目录下的相对路径。</li><li>举例：<code>find_element(&quot;apps/autotest_deepin_album/picture/open.png&quot;, input_type=&quot;png&quot;))</code>，表示通过本地图片 <code>open.png</code> 识别元素。</li></ul></li><li><p><strong>参数 <code>fill_color_position</code></strong></p><ul><li><code>fill_color_position</code> 参数为默认参数，默认值为 <code>(-1, -1)</code>，<code>(-1, -1)</code> 表示取屏幕中右下角最后一个像素点作为填充坐标，在 <code>1920x1080</code> 屏幕分辨率下即实际坐标为 <code>(1919, 1079)</code> ，这样的写法可以适配不同大小的屏幕。</li><li>任务栏在屏幕不同方位： <ul><li>任务栏在屏幕下方，从任务栏启动不需要传入该参数。</li><li>任务栏在屏幕左边，<code>fill_color_position=(1, 1)</code></li><li>任务栏在屏幕右边，<code>fill_color_position=(-1, -1)</code></li><li>任务栏在屏幕上边，<code>fill_color_position=(1, 1)</code></li></ul></li><li>从桌面启动应用，则需要传入除任务栏以外其他位置的坐标，比如(100, 100)，只要这个坐标为除应用和任务栏区域都可以。</li><li>从启动器里面启动应用，需要填充的坐标为启动器区域。</li></ul><p>注：通过应用 <code>icon</code> 识别时，从测试机获取的 <code>icon</code> 原文件为 <code>svg</code> 矢量图，转换为 <code>png</code> 之后需要填充边缘透明部分。</p></li><li><p><strong>参数 <code>size</code></strong></p><ul><li><code>size</code> 参数为默认参数，默认值为 <code>(25, 70)</code>，表示测试机上 <code>dock</code> 栏上应用图标的大小范围。</li><li><code>UOS</code> 系统 <code>dock</code> 栏是可以上下拖动大小的，随着 <code>dock</code> 栏大小改变，应用图标的范围为25到70之间。</li><li>如果你的测试机操作系统上 <code>dock</code> 栏大小不一样，可以根据实际情况传入大小范围。</li></ul></li></ul><p>2.2、<code>click_element</code>、 <code>right_click_element</code>， <code>double_click_element</code> 这几个方法参数规则与 <code>find_element</code> 方法一样。他们实际上是在 <code>find_element</code> 方法基础之上做了二次封装，增加了鼠标的动作，如果你不想使用这几个方法，在用例中也可以通过 <code>find_element</code> 获取到坐标，然后将坐标传入到键鼠的方法中，可以实现同样的效果。</p><p>2.3、用例类中有个类变量 <code>icon = [&quot;deepin-album&quot;] </code> 需要特殊说明，列表中的元素为这条用例里面需要用到的所有 <code>icon</code>，用例执行之前会从测试机上拷贝所有需要用的 <code>icon</code> 到服务端用于图像识别。列表中元素为应用 <code>desktop</code> 文件的文件名，相册的 <code>desktop</code> 文件名为 <code>deepin-album.desktop</code>，只需要写 <code>deepin-album</code> 即可，<code>.desktop </code> 已经在底层做了拼接。</p><h2 id="七、执行入口" tabindex="-1">七、执行入口 <a class="header-anchor" href="#七、执行入口" aria-label="Permalink to &quot;七、执行入口&quot;">​</a></h2><h3 id="_1、用例组织" tabindex="-1">1、用例组织 <a class="header-anchor" href="#_1、用例组织" aria-label="Permalink to &quot;1、用例组织&quot;">​</a></h3><p>在 <code>setting/config/server.ini</code> 文件中 <code>APP_NAME= </code> 字段为用例的执行的目录，默认为 <code>apps</code> 目录下所有用例。如果你想指定执行某一个应用的用例，你可以将该配置项指定到应用的用例目录，比如：<code>APP_NAME=deepin_album</code>， 表示执行相册目录下的用例。</p><h3 id="_2、命令行参数" tabindex="-1">2、命令行参数 <a class="header-anchor" href="#_2、命令行参数" aria-label="Permalink to &quot;2、命令行参数&quot;">​</a></h3><p>通过命令行参数配置参数</p><p>以下为 <code>python3 manage.py run</code> 提供的一些参数选项：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  -a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> APP,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --app</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> APP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     应用名称：deepin-music</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  -k</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> KEYWORDS,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --keywords</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> KEYWORDS</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                        用例的关键词</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TAGS,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --tags</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TAGS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  用例的标签</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --log_level</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> LOG_LEVEL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 日志输出级别</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {host,docker}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 在宿主机或容器环境执行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --client_alias</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  选择测试机别名,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 可选项为client.ini中已配置,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 默认值为</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zx-x86.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --count</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 指定用例执行次数</span></span></code></pre></div><p>在一些 CI 环境下使用命令行参数会更加方便：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --app</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deepin-music</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --keywords</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;xxx&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --tags</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;xxx&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span></span></code></pre></div><p>注：在容器中执行时，若强制退出，容器并不会停止运行！</p><h2 id="八、测试报告" tabindex="-1">八、测试报告 <a class="header-anchor" href="#八、测试报告" aria-label="Permalink to &quot;八、测试报告&quot;">​</a></h2><h3 id="_1、json-报告" tabindex="-1">1、Json 报告 <a class="header-anchor" href="#_1、json-报告" aria-label="Permalink to &quot;1、Json 报告&quot;">​</a></h3><p>自研视频解析工具会对单条用例执行一轮生成一个 <code>json</code> 文件，存放于 <code>report/{app_name}/{scene}/{run_num}</code> 目录下，命名格式为：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">report.json</span></span></code></pre></div><p><code>json</code> 内容举例：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;Stab1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;images&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">150</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">151</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;startStub&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Stab&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;Stab2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;images&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">152</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">153</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">169</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">170</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;startStub&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;UnStab&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;Stab3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;images&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">171</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">172</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">301</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;startStub&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;UnStab&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p>说明：</p><ul><li><code>Stab</code> ：表示解析过程中不同的阶段。</li><li><code>images</code> ：表示每一帧的图片序号。</li><li><code>startStub</code>： 为识别尾帧的阶段表示，如果 <code>&quot;startStub&quot;: 1</code> ，说明尾帧出现在该阶段。</li><li><code>type</code>： 为 <code>Stab</code> 或 <code>UnStab</code> ，表示稳定阶段或不稳定阶段。</li></ul><p>各阶段有帧数补偿，默认补偿的帧数为 3 帧（可以通过 <code>server.ini</code> 里面 <code>un_stab_start=3</code> 进行配置），表示小于等于 3 帧的不稳定阶段视为稳定阶段，在最后计算性能结果时前后均需要减掉。</p><p>应用启动阶段就是在 <code>Stab2</code> 阶段，启动时间为：171 减 151 再减掉前后补偿帧数 6 帧，即 14 帧，视频帧率 30 帧/秒，因此启动耗时为：14 * 33 = 462 ms</p><h3 id="_2、excel-报告" tabindex="-1">2、Excel 报告 <a class="header-anchor" href="#_2、excel-报告" aria-label="Permalink to &quot;2、Excel 报告&quot;">​</a></h3><p>所有用例执行并解析完之后会 <code>report</code> 目录下生成一个汇总数据的 <code>Excel</code> 文件，文件名为：<code>{time}_perf_time.xlsx</code>。</p><p>注意，<code>report</code> 目录为可配置项，默认情况下会在项目根目录下生成，如果你将 <code>report</code>，指定到项目下其他路径，则会在对应的路径下生成 <code>json</code> 和 <code>Excel</code> 文件。</p><p>你也可以根据需要读取所有 <code>json</code> / <code>excel</code> 报告的数据，生成你自己想要的一些测试报告形式。</p><h2 id="九、usb-串口驱动键鼠方法" tabindex="-1">九、USB 串口驱动键鼠方法 <a class="header-anchor" href="#九、usb-串口驱动键鼠方法" aria-label="Permalink to &quot;九、USB 串口驱动键鼠方法&quot;">​</a></h2><p>位于 <code>src/utils/control/serial_communication</code> 目录下的 <code>usb_mk.py</code> 文件</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UsbMk()</span></span></code></pre></div><h3 id="_1、键盘操作" tabindex="-1">1、键盘操作 <a class="header-anchor" href="#_1、键盘操作" aria-label="Permalink to &quot;1、键盘操作&quot;">​</a></h3><p>（1）按下键盘按键</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.press_key(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;enter&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 按下键盘enter键</span></span></code></pre></div><p>（2）按下键盘按键并且不放</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.press_key_down(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;enter&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 按下键盘enter键不放</span></span></code></pre></div><p>（3）组合按键</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.hot_key(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ctrl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;alt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;T&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 按下组合按键ctrl+alt+T调起终端</span></span></code></pre></div><p>（4）组合按键不放</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.hot_key_down(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ctrl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;alt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;T&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 按下组合按键ctrl+alt+T调起终端不放</span></span></code></pre></div><p>（5）释放所有键盘按键</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.key_up()</span></span></code></pre></div><p>（6）键盘输入字符串（支持传入汉字，会自动转成拼音输入）</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.hot_key(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ctrl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;alt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;T&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 按下组合按键ctrl+alt+T调起终端</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.input_text(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;reboot&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 输入字符串reboot</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.press_key(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;enter&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 按下键盘enter键</span></span></code></pre></div><h3 id="_2、鼠标操作" tabindex="-1">2、鼠标操作 <a class="header-anchor" href="#_2、鼠标操作" aria-label="Permalink to &quot;2、鼠标操作&quot;">​</a></h3><p>（1）按下鼠标左键</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.click()</span></span></code></pre></div><p>（2）按下鼠标左键不放</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.mouse_down()</span></span></code></pre></div><p>（3）释放鼠标所有按键</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.mouse_up()</span></span></code></pre></div><p>（4）按下鼠标右键</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.right_click()</span></span></code></pre></div><p>（5）鼠标左键双击</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.double_click()</span></span></code></pre></div><p>（6）恢复鼠标至初始位置，默认左上角</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.move_to_init()</span></span></code></pre></div><p>（7）移动鼠标至相对坐标</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.move_rel(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 鼠标向左边移动100个像素，向下移动200个像素</span></span></code></pre></div><p>（8）以屏幕左上角为圆心坐标移动鼠标至屏幕绝对坐标</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.move_to(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 鼠标移动至屏幕坐标（100, 200）</span></span></code></pre></div><p>（9）按下鼠标左键，拖动到绝对坐标位置</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.drag_to(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 按下鼠标拖动至屏幕坐标（100, 200）</span></span></code></pre></div><p>（10）按下鼠标左键，拖动到相对坐标位置</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">usb_mk.drag_rel(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 鼠标向左边移动100个像素，向下移动200个像素</span></span></code></pre></div><h2 id="十、继电器控制主机开机-重启" tabindex="-1">十、继电器控制主机开机/重启 <a class="header-anchor" href="#十、继电器控制主机开机-重启" aria-label="Permalink to &quot;十、继电器控制主机开机/重启&quot;">​</a></h2><p>（若不使用继电器，可忽略该步骤，执行时会通过命令 <code>reboot</code>）</p><h3 id="_1、继电器设备" tabindex="-1">1、继电器设备 <a class="header-anchor" href="#_1、继电器设备" aria-label="Permalink to &quot;1、继电器设备&quot;">​</a></h3><p><code>LCUS-2</code> 型 双路 <code>USB</code> 智能串口控制继电器。</p><p><a href="https://item.taobao.com/item.htm?spm=a1z09.2.0.0.41d72e8dUYx2pi&amp;id=582653718178&amp;_u=i25r20ia6a2e" target="_blank" rel="noreferrer">https://item.taobao.com/item.htm?spm=a1z09.2.0.0.41d72e8dUYx2pi&amp;id=582653718178&amp;_u=i25r20ia6a2e</a></p><p><img src="https://pic.imgdb.cn/item/64f054cb661c6c8e54ff5091.png" alt=""></p><h3 id="_2、usb-延长线" tabindex="-1">2、USB 延长线 <a class="header-anchor" href="#_2、usb-延长线" aria-label="Permalink to &quot;2、USB 延长线&quot;">​</a></h3><p>普通的 <code>USB</code> 线即可。</p><p><img src="https://pic.imgdb.cn/item/64f054cb661c6c8e54ff50a9.png" alt=""></p><h3 id="_3、杜邦线" tabindex="-1">3、杜邦线 <a class="header-anchor" href="#_3、杜邦线" aria-label="Permalink to &quot;3、杜邦线&quot;">​</a></h3><p>3.1、<code>40P</code> 母对公杜邦线。</p><p><img src="https://pic.imgdb.cn/item/64f054cb661c6c8e54ff50db.png" alt=""></p><p>3.2、一母二公杜邦线。</p><p><img src="https://pic.imgdb.cn/item/64f054cb661c6c8e54ff5102.png" alt=""></p><h3 id="_4、安装图文教程" tabindex="-1">4、安装图文教程 <a class="header-anchor" href="#_4、安装图文教程" aria-label="Permalink to &quot;4、安装图文教程&quot;">​</a></h3><p>4.1、使用 <code>USB</code> 延长线连接控制端和继电器。</p><p><img src="https://pic.imgdb.cn/item/64f054cb661c6c8e54ff5140.png" alt=""></p><p>4.2、在继电器常端和公共端均连接一根杜邦线。</p><p><img src="https://pic.imgdb.cn/item/64f054cc661c6c8e54ff5182.png" alt=""></p><p>4.3、在主板上开机针和重启针上插上一母二公杜邦线。</p><p><img src="https://pic.imgdb.cn/item/64f054cc661c6c8e54ff51c2.png" alt=""></p><p>4.4、将开机针外接的一母二公杜邦线的两根公线分别接入继电器的1路继电器（如图 1左侧继电器）和原电源开关。</p><p>4.5、将重启针外接的一母二公杜邦线的两根公线分别接入继电器的2路继电器（如图 1 右侧继电器）和原电源开关。</p><p><img src="https://pic.imgdb.cn/item/64f054cc661c6c8e54ff523e.png" alt=""></p><p>若想保留原电源开关的电源灯，可根据如上图所示，使用杜邦线连接主板上的电源灯和原电源开关</p><h2 id="十一、常见问题说明" tabindex="-1">十一、常见问题说明 <a class="header-anchor" href="#十一、常见问题说明" aria-label="Permalink to &quot;十一、常见问题说明&quot;">​</a></h2><p><strong>1、</strong><code>ERROR: for uos Cannot restart container 2301b1a1395d7959ee6523d61b61c87084649af530786cdb8fb5b3ecbcbd1068: linux runtime spec devices: error gathering device information while adding custom device &quot;/dev/ttyACM0&quot;: no such file or directory</code></p><p>检查 USB 串口线连接状态，查看 <code>/dev/ttyACM0</code> 是否存在，若存在 <code>/dev/ttyACMn</code>（n为任意数字），重启电脑解决。</p><p><strong>2、</strong><code>Error response from daemon: Container 5e700fdc769e8c74666d68a7f2bc3de58268b4594cf88706609d59f8dbc7362d is not running</code></p><p>容器启动失败</p><p>1）检查哪一个容器未启动</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> container</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 列出运行中的 Docker 容器</span></span></code></pre></div><p><img src="https://pic.imgdb.cn/item/64f054cc661c6c8e54ff524b.png" alt=""></p><p>2）缺少 uos 容器，检查 USB 串口连接线和采集盒连接线是否正常，重启后执行</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install/setup.up</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 重新完整部署环境</span></span></code></pre></div><p>或执行</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --build</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 仅重新构建 Docker 镜像</span></span></code></pre></div><p>**3、**若部署时提示挂载 <code>ttyACM0</code>、<code>video0</code> 失败，请检查 USB 串口线及采集盒是否接触良好，若接触良好，重启即可解决。</p><p>4、若出现图片能识别，但是鼠标未移动操作时，安装绝对鼠标操作的依赖包，见第三节第二小节测试机环境搭建，安装完成后，必须重启测试机。</p><p>5、由于通过采集卡获取的测试机实时画面，包含了鼠标的样式，所以对图片识别时，鼠标若停留在图标上层，则会对识别结果造成影响，需要将鼠标移动至其他位置，或者隐藏鼠标解决。</p><p>6、Excel 报告中，测试场景列与用例中的不一致，关键字scene、app_name、架构别名，不能包含下划线和英文符号的圆括号。</p>`,158)]))}const o=i(t,[["render",p]]);export{g as __pageData,o as default};
